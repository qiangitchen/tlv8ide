{"script.ScriptApp":{"name":"ScriptApp","kind":"class","global":true,"category":"script","url":"http://developers.google.com/apps-script/reference/script/script-app","doc":"ScriptApp Access and manipulate script publishing and triggers. This class allows users to create script triggers and control publishing the script as a service.","property":[{"name":"AuthMode","type":"script.AuthMode","doc":""},{"name":"EventType","type":"script.EventType","doc":""},{"name":"TriggerSource","type":"script.TriggerSource","doc":""},{"name":"WeekDay","type":"base.Weekday","doc":""}],"method":[{"name":"deleteTrigger","signature":"deleteTrigger(trigger)","return":"void","doc":"Removes the given trigger so it will no longer run.","url":"http://developers.google.com/apps-script/reference/script/#deleteTrigger(Trigger)","argument":[{"name":"trigger","type":"script.Trigger","doc":"the trigger to delete"}]},{"name":"getOAuthToken","signature":"getOAuthToken()","return":"String","doc":"Gets the OAuth 2.0 access token for the current user.","url":"http://developers.google.com/apps-script/reference/script/#getOAuthToken()","argument":[]},{"name":"getProjectTriggers","signature":"getProjectTriggers()","return":"script.Trigger[]","doc":"Returns an array of triggers associated with the current project.","url":"http://developers.google.com/apps-script/reference/script/#getProjectTriggers()","argument":[]},{"name":"getService","signature":"getService()","return":"script.Service","doc":"Returns a Service object to manage publishing the script as a web app.","url":"http://developers.google.com/apps-script/reference/script/#getService()","argument":[]},{"name":"invalidateAuth","signature":"invalidateAuth()","return":"void","doc":"Invalidates the authorization this user has to execute the current script.","url":"http://developers.google.com/apps-script/reference/script/#invalidateAuth()","argument":[]},{"name":"newStateToken","signature":"newStateToken()","return":"script.StateTokenBuilder","doc":"Creates a builder for a state token that can be used in a callback API (like an OAuth flow).","url":"http://developers.google.com/apps-script/reference/script/#newStateToken()","argument":[]},{"name":"newTrigger","signature":"newTrigger(functionName)","return":"script.TriggerBuilder","doc":"Begins the process of creating a trigger that when fired, will call the passed in method.","url":"http://developers.google.com/apps-script/reference/script/#newTrigger(String)","argument":[{"name":"functionName","type":"String","doc":"the function to call when the trigger fires"}]}]},"script.ClockTriggerBuilder":{"name":"ClockTriggerBuilder","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/clock-trigger-builder","doc":"ClockTriggerBuilder A builder for clock triggers","property":[],"method":[{"name":"after","signature":"after(durationMilliseconds)","return":"script.ClockTriggerBuilder","doc":"Specifies the duration (in milliseconds) after the current time that the trigger will run.","url":"http://developers.google.com/apps-script/reference/script/#after(Integer)","argument":[{"name":"durationMilliseconds","type":"Integer","doc":"the duration (in milliseconds) after the current time when the trigger should run"}]},{"name":"at","signature":"at(date)","return":"script.ClockTriggerBuilder","doc":"Specifies when the trigger will run (plus or minus 15 minutes).","url":"http://developers.google.com/apps-script/reference/script/#at(Date)","argument":[{"name":"date","type":"Date","doc":"a Date object representing when the trigger should run"}]},{"name":"atDate","signature":"atDate(year, month, day)","return":"script.ClockTriggerBuilder","doc":"Specifies trigger will fire on the given date, by default near midnight (+/- 15 minutes).","url":"http://developers.google.com/apps-script/reference/script/#atDate(Integer,Integer,Integer)","argument":[{"name":"year","type":"Integer","doc":"the calendar year to schedule the trigger"},{"name":"month","type":"Integer","doc":"the calendar month to schedule the trigger (should be a number between 1 and 12, inclusive)"},{"name":"day","type":"Integer","doc":"the calendar day to schedule the trigger (should be a number between 1 and 31, inclusive)"}]},{"name":"atHour","signature":"atHour(hour)","return":"script.ClockTriggerBuilder","doc":"Specifies the hour the trigger will run (plus or minus 15 minutes).","url":"http://developers.google.com/apps-script/reference/script/#atHour(Integer)","argument":[{"name":"hour","type":"Integer","doc":"the hour at which to fire"}]},{"name":"create","signature":"create()","return":"script.Trigger","doc":"Creates the trigger.","url":"http://developers.google.com/apps-script/reference/script/#create()","argument":[]},{"name":"everyDays","signature":"everyDays(n)","return":"script.ClockTriggerBuilder","doc":"Specifies to run the trigger every n days.","url":"http://developers.google.com/apps-script/reference/script/#everyDays(Integer)","argument":[{"name":"n","type":"Integer","doc":"the number of days between executions"}]},{"name":"everyHours","signature":"everyHours(n)","return":"script.ClockTriggerBuilder","doc":"Specifies to run the trigger every n hours.","url":"http://developers.google.com/apps-script/reference/script/#everyHours(Integer)","argument":[{"name":"n","type":"Integer","doc":"the number of hours between executions"}]},{"name":"everyMinutes","signature":"everyMinutes(n)","return":"script.ClockTriggerBuilder","doc":"Specifies to run the trigger every n minutes.","url":"http://developers.google.com/apps-script/reference/script/#everyMinutes(Integer)","argument":[{"name":"n","type":"Integer","doc":"the number of minutes between executions"}]},{"name":"everyWeeks","signature":"everyWeeks(n)","return":"script.ClockTriggerBuilder","doc":"Specifies to run the trigger every n weeks.","url":"http://developers.google.com/apps-script/reference/script/#everyWeeks(Integer)","argument":[{"name":"n","type":"Integer","doc":"the number of weeks between executions"}]},{"name":"inTimezone","signature":"inTimezone(timezone)","return":"script.ClockTriggerBuilder","doc":"Specifies the timezone that the specified dates/time that the trigger will run in.","url":"http://developers.google.com/apps-script/reference/script/#inTimezone(String)","argument":[{"name":"timezone","type":"String","doc":"the timezone with which to treat time information in the event"}]},{"name":"nearMinute","signature":"nearMinute(minute)","return":"script.ClockTriggerBuilder","doc":"Specifies the minute the trigger will run (plus or minus 15 minutes).","url":"http://developers.google.com/apps-script/reference/script/#nearMinute(Integer)","argument":[{"name":"minute","type":"Integer","doc":"the minute at which to fire"}]},{"name":"onMonthDay","signature":"onMonthDay(day)","return":"script.ClockTriggerBuilder","doc":"Specifies on what date in the month that the trigger will run.","url":"http://developers.google.com/apps-script/reference/script/#onMonthDay(Integer)","argument":[{"name":"day","type":"Integer","doc":"the day of the month the trigger should be scheduled for"}]},{"name":"onWeekDay","signature":"onWeekDay(day)","return":"script.ClockTriggerBuilder","doc":"Specifies on what day of the week that the trigger will run.","url":"http://developers.google.com/apps-script/reference/script/#onWeekDay(Weekday)","argument":[{"name":"day","type":"base.Weekday","doc":"the day of the week to fire"}]}]},"script.FormTriggerBuilder":{"name":"FormTriggerBuilder","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/form-trigger-builder","doc":"FormTriggerBuilder A builder for form triggers.","property":[],"method":[{"name":"create","signature":"create()","return":"script.Trigger","doc":"Creates and returns the new trigger.","url":"http://developers.google.com/apps-script/reference/script/#create()","argument":[]},{"name":"onFormSubmit","signature":"onFormSubmit()","return":"script.FormTriggerBuilder","doc":"Specifies a trigger that will fire when a response is submitted to the form.","url":"http://developers.google.com/apps-script/reference/script/#onFormSubmit()","argument":[]},{"name":"onOpen","signature":"onOpen()","return":"script.FormTriggerBuilder","doc":"Specifies a trigger that will fire when the form's edit view is opened.","url":"http://developers.google.com/apps-script/reference/script/#onOpen()","argument":[]}]},"script.Service":{"name":"Service","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/service","doc":"Service Access and manipulate script publishing.","property":[{"name":"Restriction","type":"script.Service.Restriction","doc":"Enum representing the access restrictions on a script exported as a service."}],"method":[{"name":"disable","signature":"disable()","return":"void","doc":"Disables the script from being accessed as a web app.","url":"http://developers.google.com/apps-script/reference/script/#disable()","argument":[]},{"name":"enable","signature":"enable(restriction)","return":"void","doc":"Allows the script to be accessed as a web app with the specified permissions.","url":"http://developers.google.com/apps-script/reference/script/#enable(Service.Restriction)","argument":[{"name":"restriction","type":"script.Service.Restriction","doc":"who is allowed to access the web app"}]},{"name":"getUrl","signature":"getUrl()","return":"String","doc":"Returns the URL of the web app, if it has been deployed; otherwise returns null.","url":"http://developers.google.com/apps-script/reference/script/#getUrl()","argument":[]},{"name":"isEnabled","signature":"isEnabled()","return":"Boolean","doc":"Returns true if the script is accessible as a web app.","url":"http://developers.google.com/apps-script/reference/script/#isEnabled()","argument":[]}]},"script.SpreadsheetTriggerBuilder":{"name":"SpreadsheetTriggerBuilder","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/spreadsheet-trigger-builder","doc":"SpreadsheetTriggerBuilder Builder for spreadsheet triggers.","property":[],"method":[{"name":"create","signature":"create()","return":"script.Trigger","doc":"Creates the trigger and returns it.","url":"http://developers.google.com/apps-script/reference/script/#create()","argument":[]},{"name":"onChange","signature":"onChange()","return":"script.SpreadsheetTriggerBuilder","doc":"Specifies a trigger that will fire when the spreadsheet's content or structure is changed.","url":"http://developers.google.com/apps-script/reference/script/#onChange()","argument":[]},{"name":"onEdit","signature":"onEdit()","return":"script.SpreadsheetTriggerBuilder","doc":"Specifies a trigger that will fire when the spreadsheet is edited.","url":"http://developers.google.com/apps-script/reference/script/#onEdit()","argument":[]},{"name":"onFormSubmit","signature":"onFormSubmit()","return":"script.SpreadsheetTriggerBuilder","doc":"Specifies a trigger that will fire when the spreadsheet has a form submitted to it.","url":"http://developers.google.com/apps-script/reference/script/#onFormSubmit()","argument":[]},{"name":"onOpen","signature":"onOpen()","return":"script.SpreadsheetTriggerBuilder","doc":"Specifies a trigger that will fire when the spreadsheet is opened.","url":"http://developers.google.com/apps-script/reference/script/#onOpen()","argument":[]}]},"script.StateTokenBuilder":{"name":"StateTokenBuilder","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/state-token-builder","doc":"StateTokenBuilder Allows scripts to create state tokens that can be used in callback APIs (like OAuth flows). // Reusable function to generate a callback URL, assuming the script has been published as a // web app (necessary to obtain the URL programmatically). If the script has not been published // as a web app, set `var url` in the first line to the URL of your script project (which // cannot be obtained programmatically). function getCallbackURL(callbackFunction){ var url = ScriptApp.getService().getUrl(); // Ends in /exec (for a web app) url = url.slice(0, -4) + 'usercallback?state='; // Change /exec to /usercallback var stateToken = ScriptApp.newStateToken() .withMethod(callbackFunction) .withTimeout(120) .createToken(); return url + stateToken; }","property":[],"method":[{"name":"createToken","signature":"createToken()","return":"String","doc":"Constructs an encrypted string representation of the state token.","url":"http://developers.google.com/apps-script/reference/script/#createToken()","argument":[]},{"name":"withArgument","signature":"withArgument(name, value)","return":"script.StateTokenBuilder","doc":"Adds an argument to the token.","url":"http://developers.google.com/apps-script/reference/script/#withArgument(String,String)","argument":[{"name":"name","type":"String","doc":"the name of the argument"},{"name":"value","type":"String","doc":"the value of the argument"}]},{"name":"withMethod","signature":"withMethod(method)","return":"script.StateTokenBuilder","doc":"Sets a callback function.","url":"http://developers.google.com/apps-script/reference/script/#withMethod(String)","argument":[{"name":"method","type":"String","doc":"the name of the callback function, represented as a string without parentheses or arguments"}]},{"name":"withTimeout","signature":"withTimeout(seconds)","return":"script.StateTokenBuilder","doc":"Sets the duration (in seconds) for which the token is valid.","url":"http://developers.google.com/apps-script/reference/script/#withTimeout(Integer)","argument":[{"name":"seconds","type":"Integer","doc":"the duration for which the token is valid; the maximum value is 3600"}]}]},"script.Trigger":{"name":"Trigger","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/trigger","doc":"Trigger A script trigger","property":[],"method":[{"name":"getEventType","signature":"getEventType()","return":"script.EventType","doc":"Returns the event type that the trigger fires on.","url":"http://developers.google.com/apps-script/reference/script/#getEventType()","argument":[]},{"name":"getHandlerFunction","signature":"getHandlerFunction()","return":"String","doc":"Returns the function that will be called when the trigger fires.","url":"http://developers.google.com/apps-script/reference/script/#getHandlerFunction()","argument":[]},{"name":"getTriggerSource","signature":"getTriggerSource()","return":"script.TriggerSource","doc":"Returns the source of events that will cause the trigger to fire.","url":"http://developers.google.com/apps-script/reference/script/#getTriggerSource()","argument":[]},{"name":"getTriggerSourceId","signature":"getTriggerSourceId()","return":"String","doc":"Returns the id specific to the source.","url":"http://developers.google.com/apps-script/reference/script/#getTriggerSourceId()","argument":[]},{"name":"getUniqueId","signature":"getUniqueId()","return":"String","doc":"Returns a unique identifier that can be used to distinguish triggers from each other.","url":"http://developers.google.com/apps-script/reference/script/#getUniqueId()","argument":[]}]},"script.TriggerBuilder":{"name":"TriggerBuilder","kind":"class","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/trigger-builder","doc":"TriggerBuilder A generic builder for script triggers.","property":[],"method":[{"name":"forForm","signature":"forForm(form)","return":"script.FormTriggerBuilder","doc":"Creates and returns a FormTriggerBuilder tied to the given form.","url":"http://developers.google.com/apps-script/reference/script/#forForm(Form)","argument":[{"name":"form","type":"forms.Form","doc":"the form"}]},{"name":"forForm","signature":"forForm(key)","return":"script.FormTriggerBuilder","doc":"Creates and returns a FormTriggerBuilder tied to the form with the given ID.","url":"http://developers.google.com/apps-script/reference/script/#forForm(String)","argument":[{"name":"key","type":"String","doc":"the ID for the form"}]},{"name":"forSpreadsheet","signature":"forSpreadsheet(sheet)","return":"script.SpreadsheetTriggerBuilder","doc":"Creates and returns a SpreadsheetTriggerBuilder tied to the given spreadsheet.","url":"http://developers.google.com/apps-script/reference/script/#forSpreadsheet(Spreadsheet)","argument":[{"name":"sheet","type":"spreadsheet.Spreadsheet","doc":"the spreadsheet"}]},{"name":"forSpreadsheet","signature":"forSpreadsheet(key)","return":"script.SpreadsheetTriggerBuilder","doc":"Creates and returns a SpreadsheetTriggerBuilder tied to the spreadsheet with the given ID.","url":"http://developers.google.com/apps-script/reference/script/#forSpreadsheet(String)","argument":[{"name":"key","type":"String","doc":"the ID for the spreadsheet"}]},{"name":"timeBased","signature":"timeBased()","return":"script.ClockTriggerBuilder","doc":"Creates and returns a ClockTriggerBuilder for building time-based triggers.","url":"http://developers.google.com/apps-script/reference/script/#timeBased()","argument":[]}]},"script.AuthMode":{"name":"AuthMode","kind":"enum","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/auth-mode","doc":"AuthMode An enumeration that identifies which categories of authorized services Apps Script is able to execute through a triggered function. These values are exposed in triggered functions as the authMode property of the event parameter, e. For more information, see the guide to the authorization lifecycle for add-ons. function onOpen(e) { var menu = SpreadsheetApp.getUi().createAddonMenu(); if (e && e.authMode == ScriptApp.AuthMode.NONE) { // Add a normal menu item (works in all authorization modes). menu.addItem('Start workflow', 'startWorkflow'); } else { // Add a menu item based on properties (doesn't work in AuthMode.NONE). var properties = PropertiesService.getDocumentProperties(); var workflowStarted = properties.getProperty('workflowStarted'); if (workflowStarted) { menu.addItem('Check workflow status', 'checkWorkflow'); } else { menu.addItem('Start workflow', 'startWorkflow'); } // Record analytics. UrlFetchApp.fetch('http://www.example.com/analytics?event=open'); } menu.addToUi(); }","property":[{"name":"NONE","type":"Enum","doc":"A mode that does not allow access to any services that require authorization. This mode occurs when an add-on executes an onOpen(e) simple trigger, and the user has installed an add-on in a different document but the add-on has not been used in the current document."},{"name":"CUSTOM_FUNCTION","type":"Enum","doc":"A mode that allows access to a limited subset of services for use in custom spreadsheet functions. Some of these services — including read-only access to Spreadsheet service — normally require authorization, but are permitted without authorization when used in a custom function. Because custom functions do not include an event parameter, this value is never returned; it is documented only to demonstrate that custom functions run in their own authorization mode."},{"name":"LIMITED","type":"Enum","doc":"A mode that allows access to a limited subset of services. This mode occurs when an add-on or a script bound to a document executes an onOpen(e) or onEdit(e) simple trigger, except in the case described for NONE."},{"name":"FULL","type":"Enum","doc":"A mode that allows access to all services that require authorization. This mode occurs when an add-on or a script executes as the result of any trigger other than the cases described for LIMITED or NONE."}],"method":[]},"script.EventType":{"name":"EventType","kind":"enum","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/event-type","doc":"EventType An enum denoting the type of the event.","property":[{"name":"CLOCK","type":"Enum","doc":""},{"name":"ON_OPEN","type":"Enum","doc":""},{"name":"ON_EDIT","type":"Enum","doc":""},{"name":"ON_FORM_SUBMIT","type":"Enum","doc":""},{"name":"ON_CHANGE","type":"Enum","doc":""}],"method":[]},"script.Service.Restriction":{"name":"Service.Restriction","kind":"enum","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/service.-restriction","doc":"Service.Restriction","property":[{"name":"MYSELF","type":"Enum","doc":""},{"name":"DOMAIN","type":"Enum","doc":""},{"name":"ALL","type":"Enum","doc":""}],"method":[]},"script.TriggerSource":{"name":"TriggerSource","kind":"enum","global":false,"category":"script","url":"http://developers.google.com/apps-script/reference/script/trigger-source","doc":"TriggerSource Enum denoting what the source of the event that the trigger fires on is.","property":[{"name":"SPREADSHEETS","type":"Enum","doc":""},{"name":"CLOCK","type":"Enum","doc":""},{"name":"FORMS","type":"Enum","doc":""},{"name":"DOCUMENTS","type":"Enum","doc":""}],"method":[]}}