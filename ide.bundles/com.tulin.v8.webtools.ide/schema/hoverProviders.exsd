<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.tulin.v8.webtools.ide" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.tulin.v8.webtools.ide" id="hoverProviders" name="Hover providers"/>
      </appinfo>
      <documentation>
         This extension point is used to contribute hover providers for showing text hovers in a file with a given content type.
      </documentation>
   </annotation>

   <include schemaLocation="schema://org.eclipse.core.expressions/schema/expressionLanguage.exsd"/>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="hoverProvider" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="hoverProvider">
      <complexType>
         <sequence>
            <element ref="enabledWhen" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  A string uniquely identifying this reference provider.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified class name implementing the interface &lt;code&gt;org.eclipse.jface.text.ITextHover&lt;/code&gt;
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.jface.text.ITextHover"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="contentType" type="string" use="required">
            <annotation>
               <documentation>
                  The target content-type for this extension. Content-types are defined as extension to the org.eclipse.core.contenttype.contentTypes extension point.
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.core.contenttype.contentTypes/content-type/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="isBefore" type="string">
            <annotation>
               <documentation>
                  The id of a hoverProvider before which to place this contribution.
Plan is to have contributions are sorted according to that value and to have only the first one shown (or the the first &quot;compoundable&quot; ones)
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.ui.genericeditor.hoverProviders/hoverProvider/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="isAfter" type="string">
            <annotation>
               <documentation>
                  The id of a hoverProvider after which to place this contribution.
Plan is to have contributions are sorted according to that value and to have only the first one shown (or the the first &quot;compoundable&quot; ones)
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.ui.genericeditor.hoverProviders/hoverProvider/@id"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="enabledWhen">
      <annotation>
         <documentation>
            A core Expression that controls the enabled of the given hover provider. The viewer, editor, and editor input are registered in the evaluation context as variable:

 * &lt;with variable=&quot;viewer&quot;/&gt; : use it if your expression requires the viewer.
 * &lt;with variable=&quot;document&quot;/&gt; : use it if your expression requires the document.
 * &lt;with variable=&quot;editor&quot;/&gt; : use it if your expression requires the editor (deprecated, not always set).
 * &lt;with variable=&quot;editorInput&quot;/&gt; :  use it if your expression requires the editor input (deprecated, not always set).
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="0" maxOccurs="1">
            <element ref="not"/>
            <element ref="or"/>
            <element ref="and"/>
            <element ref="instanceof"/>
            <element ref="test"/>
            <element ref="systemTest"/>
            <element ref="equals"/>
            <element ref="count"/>
            <element ref="with"/>
            <element ref="resolve"/>
            <element ref="adapt"/>
            <element ref="iterate"/>
            <element ref="reference"/>
         </choice>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         Below is an example using the hover provider extension point:

&lt;pre&gt;
&lt;extension point=&quot;com.tulin.v8.webtools.ide.hoverProviders&quot;&gt;
   &lt;hoverProvider
       class=&quot;org.eclipse.ui.examples.TargetDefinitionHoverProvider&quot;
       contentType=&quot;org.eclipse.pde.targetFile&quot;&gt;
      &lt;enabledWhen&gt;
         &lt;with variable=&quot;editor&quot;&gt;
            &lt;test property=&quot;org.eclipse.ui.examples.TargetDefinitionPropertyTester&quot;&gt;
            &lt;/test&gt;
         &lt;/with&gt;
      &lt;/enabledWhen&gt;
   &lt;/hoverProvider&gt;
&lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>




</schema>
