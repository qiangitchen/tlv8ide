{
  "name": "tern-closure",
  "version": "0.1.3",
  "description": "A Tern plugin adding support for Closure.",
  "main": "closure.js",
  "dependencies": {
    "acorn": "^2.1.0",
    "carrier": "^0.1.13",
    "doctrine": "^0.5.2"
  },
  "peerDependencies": {
    "tern": "^0.13.0"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.21.4",
    "sinon": "^1.10.3",
    "sinon-chai": "^2.5.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/google/tern-closure.git"
  },
  "license": "Apache-2.0",
  "homepage": "https://github.com/google/tern-closure",
  "bugs": {
    "url": "https://github.com/google/tern-closure/issues"
  },
  "keywords": [
    "tern",
    "closure"
  ],
  "scripts": {
    "test": "node_modules/mocha/bin/mocha"
  },
  "author": {
    "name": "Josh Giles",
    "email": "joshgiles@google.com"
  },
  "readme": "# tern-closure\n\n[tern-closure][tern-closure] is a plugin which adds support for [Closure\nCompiler annotations][compiler] and the [Closure Library][library] to the\nJavascript code intelligence system [Tern][tern].\n\n## Installation\n\nCurrently, tern-closure only works with the NodeJS [Tern Server][tern-server],\nand not within a browser.\n\nThe easiest way to install tern-closure is to use a recent version of\n[npm][npm]. In the directory where you installed the [tern package][tern-npm],\nsimply run\n\n```\n$ npm install tern-closure\n```\n\n<!-- TODO: Mention global installation once supported. -->\n<!-- TODO: Rundown of setup with common plugins. -->\n\n## Configuration\n\nIn order for Tern to load the tern-closure plugin once it is installed, you must\ninclude `closure` in the `plugins` section of your [Tern configuration\nfile][tern-config]. You must also explicitly disable the default `doc_comment`\nplugin, which will interfere with tern-closure.\n\nHere is a minimal example `.tern-project` configuration file:\n\n```json\n{\n  \"plugins\": {\n    \"doc_comment\": false,\n    \"closure\": {}\n  }\n}\n```\n\n### Options\n * `finder` Configuration for finding the files that provide types. See\n   [Finders][finders] below. *Optional. Default: None.*\n * `debug` Whether tern-closure should print debug output. *Optional. Default:\n   Match Tern `debug` option.*\n\n### Finders\n\ntern-closure uses \"finders\" to find the files providing Closure names via\n`goog.provide`. Finders allow tern-closure to load and interpret the files\nproviding names required via `goog.require` or referenced in JSDoc type strings\nso it better understands the context of a given file.\n\nThe `finder` section of the options object for `closure` in your `.tern-project`\nfile specifies what finder implementation you want to use, and what options you\nwant to pass to the finder. By default, no finder is used, and files are not\nautomatically loaded. Currently, only one finder implementation is included with\ntern-closure, `grep`.\n\n*Common finder options:*\n * `name` The name of the finder you want to use. *Required.*\n * `debug` Whether the finder should print debug output. *Optional. Default:\n   Match tern-closure `debug` option.*\n\n#### grep\n\n`grep` is a basic finder which uses the `grep` command-line utility to search\nfor `goog.provide` statements at startup and create a map of Closure names to\nproviding files.\n\n*Options:*\n\n * `dirs` An array of path strings indicating which directories to search for\n   files. Paths can either be absolute, or relative to the project directory.\n   *Optional. Default: `['.']` (just the project directory).*\n\nHere is an example `.tern-project` file:\n\n```json\n{\n  \"plugins\": {\n    \"doc_comment\": false,\n    \"closure\": {\n      \"finder\": {\n        \"name\": \"grep\",\n        \"dirs\": [\n          \"relevant/project/subdir\",\n          \"/absolute/path/to/library\"\n        ]\n      }\n    }\n  }\n}\n```\n\n#### Additional finders\n\nYou can easily use a finder not included in this repository, or implement your\nown. This allows you to search for names in different ways, on demand, and to\nuse existing indexes of your codebase.\n\nGiven a finder name `name`, tern-closure first looks in its own `lib/finder`\ndirectory, then attempts to load `name` using `require()`, so a third-party\nfinder module can be installed as an npm package.\n\nA finder module must implement a simple interface:\n\n * It must export a constructor `function(projectDir: string, options: Object)`\n   which takes the project directory and an options object as parameters.\n   Options are specified in the Tern configuration file.\n \n * Instances of that constructor must have a method `findFile(name: string, cb:\n   function(file: string))`, which takes as arguments a Closure name `name` to\n   find and a callback function `cb` to call with the path to file providing\n   `name`. `cb` should be called asynchronously, even if the providing file is\n   known when `findFile` is called. This allows finders to execute I/O\n   operations to find files on demand.\n\nPlease note that while tern-closure is in a `0.X.X` release, the finder API may\nbe subject to breaking changes.\n\n## Bug reports and feature requests\n\nPlease file bug reports and feature requests as issues on the [issues\npage][tern-closure-issues] of the tern-closure repository.\n\n## Contributing\n\nPull requests to tern-closure are welcome. Please see the\n[CONTRIBUTING.md][contributing] file for requirements and guidelines.\n\nDisclaimer: tern-closure is not an official Google product, and is maintained on\na best-effort basis.\n\n[tern-closure]: https://github.com/google/tern-closure\n[tern-closure-issues]: https://github.com/google/tern-closure/issues\n[tern]: http://ternjs.net\n[tern-server]: http://ternjs.net/doc/manual.html#server\n[compiler]: https://developers.google.com/closure/compiler/docs/js-for-compiler\n[library]: https://developers.google.com/closure/library/\n[npm]: https://www.npmjs.org/\n[tern-npm]: https://www.npmjs.org/package/tern\n[tern-config]: http://ternjs.net/doc/manual.html#configuration\n[finders]: https://github.com/google/tern-closure#finders\n[contributing]: https://github.com/google/tern-closure/blob/master/CONTRIBUTING.md\n",
  "readmeFilename": "README.md",
  "_id": "tern-closure@0.1.3",
  "_shasum": "d301456ea02251841e8b0a8069ef2d1a63dccbcf",
  "_from": "tern-closure@",
  "_resolved": "https://registry.npmjs.org/tern-closure/-/tern-closure-0.1.3.tgz"
}
