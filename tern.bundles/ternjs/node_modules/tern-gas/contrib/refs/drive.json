{"drive.DriveApp":{"name":"DriveApp","kind":"class","global":true,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/drive-app","doc":"DriveApp Allows scripts to create, find, and modify files and folders in Google Drive. // Log the name of every file in the user's Drive. var files = DriveApp.getFiles(); while (files.hasNext()) { var file = files.next(); Logger.log(file.getName()); }","property":[{"name":"Access","type":"drive.Access","doc":"An enum representing classes of users who can access a file or folder, besides any individual users who have been explicitly given access."},{"name":"Permission","type":"drive.Permission","doc":"An enum representing the permissions granted to users who can access a file or folder, besides any individual users who have been explicitly given access."}],"method":[{"name":"addFile","signature":"addFile(child)","return":"drive.Folder","doc":"Adds the given file to the root of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#addFile(File)","argument":[{"name":"child","type":"drive.File","doc":"the child file to add"}]},{"name":"addFolder","signature":"addFolder(child)","return":"drive.Folder","doc":"Adds the given folder to the root of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#addFolder(Folder)","argument":[{"name":"child","type":"drive.Folder","doc":"the child folder to add"}]},{"name":"continueFileIterator","signature":"continueFileIterator(continuationToken)","return":"drive.FileIterator","doc":"Resumes a file iteration using a continuation token from a previous iterator.","url":"http://developers.google.com/apps-script/reference/drive/#continueFileIterator(String)","argument":[{"name":"continuationToken","type":"String","doc":"a continuation token from a previous file iterator"}]},{"name":"continueFolderIterator","signature":"continueFolderIterator(continuationToken)","return":"drive.FolderIterator","doc":"Resumes a folder iteration using a continuation token from a previous iterator.","url":"http://developers.google.com/apps-script/reference/drive/#continueFolderIterator(String)","argument":[{"name":"continuationToken","type":"String","doc":"a continuation token from a previous folder iterator"}]},{"name":"createFile","signature":"createFile(blob)","return":"drive.File","doc":"Creates a file in the root of the user's Drive from a given Blob of arbitrary data.","url":"http://developers.google.com/apps-script/reference/drive/#createFile(BlobSource)","argument":[{"name":"blob","type":"base.BlobSource","doc":"the data for the new file"}]},{"name":"createFile","signature":"createFile(name, content)","return":"drive.File","doc":"Creates a text file in the root of the user's Drive with the given name and contents.","url":"http://developers.google.com/apps-script/reference/drive/#createFile(String,String)","argument":[{"name":"name","type":"String","doc":"the name of the new file"},{"name":"content","type":"String","doc":"the content for the new file"}]},{"name":"createFile","signature":"createFile(name, content, mimeType)","return":"drive.File","doc":"Creates a file in the root of the user's Drive with the given name, contents, and MIME type.","url":"http://developers.google.com/apps-script/reference/drive/#createFile(String,String,String)","argument":[{"name":"name","type":"String","doc":"the name of the new file"},{"name":"content","type":"String","doc":"the content for the new file"},{"name":"mimeType","type":"String","doc":"the MIME type of the new file"}]},{"name":"createFolder","signature":"createFolder(name)","return":"drive.Folder","doc":"Creates a folder in the root of the user's Drive with the given name.","url":"http://developers.google.com/apps-script/reference/drive/#createFolder(String)","argument":[{"name":"name","type":"String","doc":"the name of the new folder"}]},{"name":"getFileById","signature":"getFileById(id)","return":"drive.File","doc":"Gets the file with the given ID.","url":"http://developers.google.com/apps-script/reference/drive/#getFileById(String)","argument":[{"name":"id","type":"String","doc":"the ID of the file"}]},{"name":"getFiles","signature":"getFiles()","return":"drive.FileIterator","doc":"Gets a collection of all files in the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getFiles()","argument":[]},{"name":"getFilesByName","signature":"getFilesByName(name)","return":"drive.FileIterator","doc":"Gets a collection of all files in the user's Drive that have the given name.","url":"http://developers.google.com/apps-script/reference/drive/#getFilesByName(String)","argument":[{"name":"name","type":"String","doc":"the name of the files to find"}]},{"name":"getFilesByType","signature":"getFilesByType(mimeType)","return":"drive.FileIterator","doc":"Gets a collection of all files in the user's Drive that have the given MIME type.","url":"http://developers.google.com/apps-script/reference/drive/#getFilesByType(String)","argument":[{"name":"mimeType","type":"String","doc":"the MIME type of the files to find"}]},{"name":"getFolderById","signature":"getFolderById(id)","return":"drive.Folder","doc":"Gets the folder with the given ID.","url":"http://developers.google.com/apps-script/reference/drive/#getFolderById(String)","argument":[{"name":"id","type":"String","doc":"the ID of the folder"}]},{"name":"getFolders","signature":"getFolders()","return":"drive.FolderIterator","doc":"Gets a collection of all folders in the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getFolders()","argument":[]},{"name":"getFoldersByName","signature":"getFoldersByName(name)","return":"drive.FolderIterator","doc":"Gets a collection of all folders in the user's Drive that have the given name.","url":"http://developers.google.com/apps-script/reference/drive/#getFoldersByName(String)","argument":[{"name":"name","type":"String","doc":"the name of the folders to find"}]},{"name":"getRootFolder","signature":"getRootFolder()","return":"drive.Folder","doc":"Gets the folder at the root of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getRootFolder()","argument":[]},{"name":"getStorageLimit","signature":"getStorageLimit()","return":"Integer","doc":"Gets the number of bytes the user is allowed to store in Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getStorageLimit()","argument":[]},{"name":"getStorageUsed","signature":"getStorageUsed()","return":"Integer","doc":"Gets the number of bytes the user is currently storing in Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getStorageUsed()","argument":[]},{"name":"getTrashedFiles","signature":"getTrashedFiles()","return":"drive.FileIterator","doc":"Gets a collection of all the files in the trash of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getTrashedFiles()","argument":[]},{"name":"getTrashedFolders","signature":"getTrashedFolders()","return":"drive.FolderIterator","doc":"Gets a collection of all the folders in the trash of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getTrashedFolders()","argument":[]},{"name":"removeFile","signature":"removeFile(child)","return":"drive.Folder","doc":"Removes the given file from the root of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#removeFile(File)","argument":[{"name":"child","type":"drive.File","doc":"the child file to remove"}]},{"name":"removeFolder","signature":"removeFolder(child)","return":"drive.Folder","doc":"Removes the given folder from the root of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#removeFolder(Folder)","argument":[{"name":"child","type":"drive.Folder","doc":"the child folder to remove"}]},{"name":"searchFiles","signature":"searchFiles(params)","return":"drive.FileIterator","doc":"Gets a collection of all files in the user's Drive that match the given search criteria.","url":"http://developers.google.com/apps-script/reference/drive/#searchFiles(String)","argument":[{"name":"params","type":"String","doc":"the search criteria, as detailed in the Google Drive SDK documentation"}]},{"name":"searchFolders","signature":"searchFolders(params)","return":"drive.FolderIterator","doc":"Gets a collection of all folders in the user's Drive that match the given search criteria.","url":"http://developers.google.com/apps-script/reference/drive/#searchFolders(String)","argument":[{"name":"params","type":"String","doc":"the search criteria, as detailed in the Google Drive SDK documentation"}]}]},"drive.File":{"name":"File","kind":"class","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/file","doc":"File A file in Google Drive. Files can be accessed or created from DriveApp. // Trash every untitled spreadsheet that hasn't been updated in a week. var files = DriveApp.getFilesByName('Untitled spreadsheet'); while (files.hasNext()) { var file = files.next(); if (new Date() - file.getLastUpdated() > 7 * 24 * 60 * 60 * 1000) { file.setTrashed(true); } }","property":[],"method":[{"name":"addCommenter","signature":"addCommenter(emailAddress)","return":"drive.File","doc":"Add the given user to the list of commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addCommenter(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addCommenter","signature":"addCommenter(user)","return":"drive.File","doc":"Add the given user to the list of commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addCommenter(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addCommenters","signature":"addCommenters(emailAddresses)","return":"drive.File","doc":"Add the given array of users to the list of commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addCommenters(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"addEditor","signature":"addEditor(emailAddress)","return":"drive.File","doc":"Adds the given user to the list of editors for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addEditor","signature":"addEditor(user)","return":"drive.File","doc":"Adds the given user to the list of editors for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addEditor(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addEditors","signature":"addEditors(emailAddresses)","return":"drive.File","doc":"Adds the given array of users to the list of editors for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addEditors(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"addViewer","signature":"addViewer(emailAddress)","return":"drive.File","doc":"Adds the given user to the list of viewers for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addViewer(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addViewer","signature":"addViewer(user)","return":"drive.File","doc":"Adds the given user to the list of viewers for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addViewer(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addViewers","signature":"addViewers(emailAddresses)","return":"drive.File","doc":"Adds the given array of users to the list of viewers for the File.","url":"http://developers.google.com/apps-script/reference/drive/#addViewers(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"getAccess","signature":"getAccess(email)","return":"drive.Permission","doc":"Gets the permission granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#getAccess(String)","argument":[{"name":"email","type":"String","doc":"the email address of the user whose permissions should be checked"}]},{"name":"getAccess","signature":"getAccess(user)","return":"drive.Permission","doc":"Gets the permission granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#getAccess(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user whose permissions should be checked"}]},{"name":"getAs","signature":"getAs(contentType)","return":"base.Blob","doc":"Return the data inside this object as a blob converted to the specified content type.","url":"http://developers.google.com/apps-script/reference/drive/#getAs(String)","argument":[{"name":"contentType","type":"String","doc":"the MIME type to convert to. For most blobs, 'application/pdf' is the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of 'image/bmp', 'image/gif', 'image/jpeg', or 'image/png' are also valid."}]},{"name":"getBlob","signature":"getBlob()","return":"base.Blob","doc":"Return the data inside this object as a blob.","url":"http://developers.google.com/apps-script/reference/drive/#getBlob()","argument":[]},{"name":"getDateCreated","signature":"getDateCreated()","return":"Date","doc":"Gets the date the File was created.","url":"http://developers.google.com/apps-script/reference/drive/#getDateCreated()","argument":[]},{"name":"getDescription","signature":"getDescription()","return":"String","doc":"Gets the description for the File.","url":"http://developers.google.com/apps-script/reference/drive/#getDescription()","argument":[]},{"name":"getDownloadUrl","signature":"getDownloadUrl()","return":"String","doc":"Gets the URL that can be used to download the file.","url":"http://developers.google.com/apps-script/reference/drive/#getDownloadUrl()","argument":[]},{"name":"getEditors","signature":"getEditors()","return":"drive.User[]","doc":"Gets the list of editors for this File.","url":"http://developers.google.com/apps-script/reference/drive/#getEditors()","argument":[]},{"name":"getId","signature":"getId()","return":"String","doc":"Gets the ID of the File.","url":"http://developers.google.com/apps-script/reference/drive/#getId()","argument":[]},{"name":"getLastUpdated","signature":"getLastUpdated()","return":"Date","doc":"Gets the date the File was last updated.","url":"http://developers.google.com/apps-script/reference/drive/#getLastUpdated()","argument":[]},{"name":"getMimeType","signature":"getMimeType()","return":"String","doc":"Gets the MIME type of the file.","url":"http://developers.google.com/apps-script/reference/drive/#getMimeType()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the name of the File.","url":"http://developers.google.com/apps-script/reference/drive/#getName()","argument":[]},{"name":"getOwner","signature":"getOwner()","return":"drive.User","doc":"Gets the owner of the File.","url":"http://developers.google.com/apps-script/reference/drive/#getOwner()","argument":[]},{"name":"getParents","signature":"getParents()","return":"drive.FolderIterator","doc":"Gets a collection of folders that are immediate parents of the File.","url":"http://developers.google.com/apps-script/reference/drive/#getParents()","argument":[]},{"name":"getSharingAccess","signature":"getSharingAccess()","return":"drive.Access","doc":"Gets which class of users can access the File, besides any individual users who have been explicitly given access.","url":"http://developers.google.com/apps-script/reference/drive/#getSharingAccess()","argument":[]},{"name":"getSharingPermission","signature":"getSharingPermission()","return":"drive.Permission","doc":"Gets the permission granted to those users who can access the File, besides any individual users who have been explicitly given access.","url":"http://developers.google.com/apps-script/reference/drive/#getSharingPermission()","argument":[]},{"name":"getSize","signature":"getSize()","return":"Integer","doc":"Gets the number of bytes used to store the File in Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getSize()","argument":[]},{"name":"getThumbnail","signature":"getThumbnail()","return":"base.Blob","doc":"Gets a thumbnail image for the file, or null if no thumbnail exists.","url":"http://developers.google.com/apps-script/reference/drive/#getThumbnail()","argument":[]},{"name":"getUrl","signature":"getUrl()","return":"String","doc":"Gets the URL that can be used to open the File in a Google App like Drive or Docs.","url":"http://developers.google.com/apps-script/reference/drive/#getUrl()","argument":[]},{"name":"getViewers","signature":"getViewers()","return":"drive.User[]","doc":"Gets the list of viewers and commenters for this File.","url":"http://developers.google.com/apps-script/reference/drive/#getViewers()","argument":[]},{"name":"isShareableByEditors","signature":"isShareableByEditors()","return":"Boolean","doc":"Determines whether users with edit permissions to the File are allowed to share with other users or change the permissions.","url":"http://developers.google.com/apps-script/reference/drive/#isShareableByEditors()","argument":[]},{"name":"isStarred","signature":"isStarred()","return":"Boolean","doc":"Determines whether the File has been starred in the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#isStarred()","argument":[]},{"name":"isTrashed","signature":"isTrashed()","return":"Boolean","doc":"Determines whether the File is in the trash of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#isTrashed()","argument":[]},{"name":"makeCopy","signature":"makeCopy()","return":"drive.File","doc":"Creates a copy of the file.","url":"http://developers.google.com/apps-script/reference/drive/#makeCopy()","argument":[]},{"name":"makeCopy","signature":"makeCopy(destination)","return":"drive.File","doc":"Creates a copy of the file in the destination directory.","url":"http://developers.google.com/apps-script/reference/drive/#makeCopy(Folder)","argument":[{"name":"destination","type":"drive.Folder","doc":"the directory to copy the file into."}]},{"name":"makeCopy","signature":"makeCopy(name)","return":"drive.File","doc":"Creates a copy of the file and names it with the name provided.","url":"http://developers.google.com/apps-script/reference/drive/#makeCopy(String)","argument":[{"name":"name","type":"String","doc":"the filename that should be applied to the new copy"}]},{"name":"makeCopy","signature":"makeCopy(name, destination)","return":"drive.File","doc":"Creates a copy of the file in the destination directory and names it with the name provided.","url":"http://developers.google.com/apps-script/reference/drive/#makeCopy(String,Folder)","argument":[{"name":"name","type":"String","doc":"the filename that should be applied to the new copy"},{"name":"destination","type":"drive.Folder","doc":"the directory to copy the file into."}]},{"name":"removeCommenter","signature":"removeCommenter(emailAddress)","return":"drive.File","doc":"Removes the given user from the list of commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#removeCommenter(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeCommenter","signature":"removeCommenter(user)","return":"drive.File","doc":"Removes the given user from the list of commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#removeCommenter(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"removeEditor","signature":"removeEditor(emailAddress)","return":"drive.File","doc":"Removes the given user from the list of editors for the File.","url":"http://developers.google.com/apps-script/reference/drive/#removeEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeEditor","signature":"removeEditor(user)","return":"drive.File","doc":"Removes the given user from the list of editors for the File.","url":"http://developers.google.com/apps-script/reference/drive/#removeEditor(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"removeViewer","signature":"removeViewer(emailAddress)","return":"drive.File","doc":"Removes the given user from the list of viewers and commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#removeViewer(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeViewer","signature":"removeViewer(user)","return":"drive.File","doc":"Removes the given user from the list of viewers and commenters for the File.","url":"http://developers.google.com/apps-script/reference/drive/#removeViewer(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"revokePermissions","signature":"revokePermissions(user)","return":"drive.File","doc":"Revokes the access to the File granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#revokePermissions(String)"},{"name":"revokePermissions","signature":"revokePermissions(user)","return":"drive.File","doc":"Revokes the access to the File granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#revokePermissions(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user whose access should be revoked"}]},{"name":"setContent","signature":"setContent(content)","return":"drive.File","doc":"Overwrites the content of the file with a given replacement.","url":"http://developers.google.com/apps-script/reference/drive/#setContent(String)","argument":[{"name":"content","type":"String","doc":"the new content for the file"}]},{"name":"setDescription","signature":"setDescription(description)","return":"drive.File","doc":"Sets the description for the File.","url":"http://developers.google.com/apps-script/reference/drive/#setDescription(String)","argument":[{"name":"description","type":"String","doc":"the new description for the File"}]},{"name":"setName","signature":"setName(name)","return":"drive.File","doc":"Sets the name of the File.","url":"http://developers.google.com/apps-script/reference/drive/#setName(String)","argument":[{"name":"name","type":"String","doc":"the new name of the File"}]},{"name":"setOwner","signature":"setOwner(emailAddress)","return":"drive.File","doc":"Changes the owner of the File.","url":"http://developers.google.com/apps-script/reference/drive/#setOwner(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user who should become the new owner"}]},{"name":"setOwner","signature":"setOwner(user)","return":"drive.File","doc":"Changes the owner of the File.","url":"http://developers.google.com/apps-script/reference/drive/#setOwner(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user who should become the new owner"}]},{"name":"setShareableByEditors","signature":"setShareableByEditors(shareable)","return":"drive.File","doc":"Sets whether users with edit permissions to the File are allowed to share with other users or change the permissions.","url":"http://developers.google.com/apps-script/reference/drive/#setShareableByEditors(Boolean)","argument":[{"name":"shareable","type":"Boolean","doc":"true if users with edit permissions should be allowed to share with other users or change the permissions; false if not"}]},{"name":"setSharing","signature":"setSharing(accessType, permissionType)","return":"drive.File","doc":"Sets which class of users can access the File and what permissions those users are granted, besides any individual users who have been explicitly given access.","url":"http://developers.google.com/apps-script/reference/drive/#setSharing(Access,Permission)","argument":[{"name":"accessType","type":"drive.Access","doc":"which class of users should be able to access the File"},{"name":"permissionType","type":"drive.Permission","doc":"the permissions that should be granted to users who can access the File"}]},{"name":"setStarred","signature":"setStarred(starred)","return":"drive.File","doc":"Sets whether the File is starred in the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#setStarred(Boolean)","argument":[{"name":"starred","type":"Boolean","doc":"true if the File should be starred in the user's Drive; false if not"}]},{"name":"setTrashed","signature":"setTrashed(trashed)","return":"drive.File","doc":"Sets whether the File is in the trash of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#setTrashed(Boolean)","argument":[{"name":"trashed","type":"Boolean","doc":"true if the File should be moved to the trash of the user's Drive; false if not"}]}]},"drive.FileIterator":{"name":"FileIterator","kind":"class","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/file-iterator","doc":"FileIterator An iterator that allows scripts to iterate over a potentially large collection of files. File iterators can be acccessed from DriveApp or a Folder. // Log the name of every file in the user's Drive. var files = DriveApp.getFiles(); while (files.hasNext()) { var file = files.next(); Logger.log(file.getName()); }","property":[],"method":[{"name":"getContinuationToken","signature":"getContinuationToken()","return":"String","doc":"Gets a token that can be used to resume this iteration at a later time.","url":"http://developers.google.com/apps-script/reference/drive/#getContinuationToken()","argument":[]},{"name":"hasNext","signature":"hasNext()","return":"Boolean","doc":"Determines whether calling next() will return an item.","url":"http://developers.google.com/apps-script/reference/drive/#hasNext()","argument":[]},{"name":"next","signature":"next()","return":"drive.File","doc":"Gets the next item in the collection of files or folders.","url":"http://developers.google.com/apps-script/reference/drive/#next()","argument":[]}]},"drive.Folder":{"name":"Folder","kind":"class","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/folder","doc":"Folder A folder in Google Drive. Folders can be accessed or created from DriveApp. // Log the name of every folder in the user's Drive. var folders = DriveApp.getFolders(); while (folders.hasNext()) { var folder = folders.next(); Logger.log(folder.getName()); }","property":[],"method":[{"name":"addEditor","signature":"addEditor(emailAddress)","return":"drive.Folder","doc":"Adds the given user to the list of editors for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#addEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addEditor","signature":"addEditor(user)","return":"drive.Folder","doc":"Adds the given user to the list of editors for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#addEditor(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addEditors","signature":"addEditors(emailAddresses)","return":"drive.Folder","doc":"Adds the given array of users to the list of editors for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#addEditors(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"addFile","signature":"addFile(child)","return":"drive.Folder","doc":"Adds the given file to the current folder.","url":"http://developers.google.com/apps-script/reference/drive/#addFile(File)","argument":[{"name":"child","type":"drive.File","doc":"the child file to add"}]},{"name":"addFolder","signature":"addFolder(child)","return":"drive.Folder","doc":"Adds the given folder to the current folder.","url":"http://developers.google.com/apps-script/reference/drive/#addFolder(Folder)","argument":[{"name":"child","type":"drive.Folder","doc":"the child folder to add"}]},{"name":"addViewer","signature":"addViewer(emailAddress)","return":"drive.Folder","doc":"Adds the given user to the list of viewers for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#addViewer(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to add"}]},{"name":"addViewer","signature":"addViewer(user)","return":"drive.Folder","doc":"Adds the given user to the list of viewers for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#addViewer(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to add"}]},{"name":"addViewers","signature":"addViewers(emailAddresses)","return":"drive.Folder","doc":"Adds the given array of users to the list of viewers for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#addViewers(String)","argument":[{"name":"emailAddresses","type":"String[]","doc":"an array of email addresses of the users to add"}]},{"name":"createFile","signature":"createFile(blob)","return":"drive.File","doc":"Creates a file in the current folder from a given Blob of arbitrary data.","url":"http://developers.google.com/apps-script/reference/drive/#createFile(BlobSource)","argument":[{"name":"blob","type":"base.BlobSource","doc":"the data for the new file"}]},{"name":"createFile","signature":"createFile(name, content)","return":"drive.File","doc":"Creates a text file in the current folder with the given name and contents.","url":"http://developers.google.com/apps-script/reference/drive/#createFile(String,String)","argument":[{"name":"name","type":"String","doc":"the name of the new file"},{"name":"content","type":"String","doc":"the content for the new file"}]},{"name":"createFile","signature":"createFile(name, content, mimeType)","return":"drive.File","doc":"Creates a file in the current folder with the given name, contents, and MIME type.","url":"http://developers.google.com/apps-script/reference/drive/#createFile(String,String,String)","argument":[{"name":"name","type":"String","doc":"the name of the new file"},{"name":"content","type":"String","doc":"the content for the new file"},{"name":"mimeType","type":"String","doc":"the MIME type of the new file"}]},{"name":"createFolder","signature":"createFolder(name)","return":"drive.Folder","doc":"Creates a folder in the current folder with the given name.","url":"http://developers.google.com/apps-script/reference/drive/#createFolder(String)","argument":[{"name":"name","type":"String","doc":"the name of the new folder"}]},{"name":"getAccess","signature":"getAccess(email)","return":"drive.Permission","doc":"Gets the permission granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#getAccess(String)","argument":[{"name":"email","type":"String","doc":"the email address of the user whose permissions should be checked"}]},{"name":"getAccess","signature":"getAccess(user)","return":"drive.Permission","doc":"Gets the permission granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#getAccess(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user whose permissions should be checked"}]},{"name":"getDateCreated","signature":"getDateCreated()","return":"Date","doc":"Gets the date the Folder was created.","url":"http://developers.google.com/apps-script/reference/drive/#getDateCreated()","argument":[]},{"name":"getDescription","signature":"getDescription()","return":"String","doc":"Gets the description for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getDescription()","argument":[]},{"name":"getEditors","signature":"getEditors()","return":"drive.User[]","doc":"Gets the list of editors for this Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getEditors()","argument":[]},{"name":"getFiles","signature":"getFiles()","return":"drive.FileIterator","doc":"Gets a collection of all files that are children of the current folder.","url":"http://developers.google.com/apps-script/reference/drive/#getFiles()","argument":[]},{"name":"getFilesByName","signature":"getFilesByName(name)","return":"drive.FileIterator","doc":"Gets a collection of all files that are children of the current folder and have the given name.","url":"http://developers.google.com/apps-script/reference/drive/#getFilesByName(String)","argument":[{"name":"name","type":"String","doc":"the name of the files to find"}]},{"name":"getFilesByType","signature":"getFilesByType(mimeType)","return":"drive.FileIterator","doc":"Gets a collection of all files that are children of the current folder and have the given MIME type.","url":"http://developers.google.com/apps-script/reference/drive/#getFilesByType(String)","argument":[{"name":"mimeType","type":"String","doc":"the MIME type of the files to find"}]},{"name":"getFolders","signature":"getFolders()","return":"drive.FolderIterator","doc":"Gets a collection of all folders that are children of the current folder.","url":"http://developers.google.com/apps-script/reference/drive/#getFolders()","argument":[]},{"name":"getFoldersByName","signature":"getFoldersByName(name)","return":"drive.FolderIterator","doc":"Gets a collection of all folders that are children of the current folder and have the given name.","url":"http://developers.google.com/apps-script/reference/drive/#getFoldersByName(String)","argument":[{"name":"name","type":"String","doc":"the name of the folders to find"}]},{"name":"getId","signature":"getId()","return":"String","doc":"Gets the ID of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getId()","argument":[]},{"name":"getLastUpdated","signature":"getLastUpdated()","return":"Date","doc":"Gets the date the Folder was last updated.","url":"http://developers.google.com/apps-script/reference/drive/#getLastUpdated()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the name of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getName()","argument":[]},{"name":"getOwner","signature":"getOwner()","return":"drive.User","doc":"Gets the owner of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getOwner()","argument":[]},{"name":"getParents","signature":"getParents()","return":"drive.FolderIterator","doc":"Gets a collection of folders that are immediate parents of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getParents()","argument":[]},{"name":"getSharingAccess","signature":"getSharingAccess()","return":"drive.Access","doc":"Gets which class of users can access the Folder, besides any individual users who have been explicitly given access.","url":"http://developers.google.com/apps-script/reference/drive/#getSharingAccess()","argument":[]},{"name":"getSharingPermission","signature":"getSharingPermission()","return":"drive.Permission","doc":"Gets the permission granted to those users who can access the Folder, besides any individual users who have been explicitly given access.","url":"http://developers.google.com/apps-script/reference/drive/#getSharingPermission()","argument":[]},{"name":"getSize","signature":"getSize()","return":"Integer","doc":"Gets the number of bytes used to store the Folder in Drive.","url":"http://developers.google.com/apps-script/reference/drive/#getSize()","argument":[]},{"name":"getUrl","signature":"getUrl()","return":"String","doc":"Gets the URL that can be used to open the Folder in a Google App like Drive or Docs.","url":"http://developers.google.com/apps-script/reference/drive/#getUrl()","argument":[]},{"name":"getViewers","signature":"getViewers()","return":"drive.User[]","doc":"Gets the list of viewers and commenters for this Folder.","url":"http://developers.google.com/apps-script/reference/drive/#getViewers()","argument":[]},{"name":"isShareableByEditors","signature":"isShareableByEditors()","return":"Boolean","doc":"Determines whether users with edit permissions to the Folder are allowed to share with other users or change the permissions.","url":"http://developers.google.com/apps-script/reference/drive/#isShareableByEditors()","argument":[]},{"name":"isStarred","signature":"isStarred()","return":"Boolean","doc":"Determines whether the Folder has been starred in the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#isStarred()","argument":[]},{"name":"isTrashed","signature":"isTrashed()","return":"Boolean","doc":"Determines whether the Folder is in the trash of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#isTrashed()","argument":[]},{"name":"removeEditor","signature":"removeEditor(emailAddress)","return":"drive.Folder","doc":"Removes the given user from the list of editors for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#removeEditor(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeEditor","signature":"removeEditor(user)","return":"drive.Folder","doc":"Removes the given user from the list of editors for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#removeEditor(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"removeFile","signature":"removeFile(child)","return":"drive.Folder","doc":"Removes the given file from the current folder.","url":"http://developers.google.com/apps-script/reference/drive/#removeFile(File)","argument":[{"name":"child","type":"drive.File","doc":"the child file to remove"}]},{"name":"removeFolder","signature":"removeFolder(child)","return":"drive.Folder","doc":"Removes the given folder from the current folder.","url":"http://developers.google.com/apps-script/reference/drive/#removeFolder(Folder)","argument":[{"name":"child","type":"drive.Folder","doc":"the child folder to remove"}]},{"name":"removeViewer","signature":"removeViewer(emailAddress)","return":"drive.Folder","doc":"Removes the given user from the list of viewers and commenters for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#removeViewer(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user to remove"}]},{"name":"removeViewer","signature":"removeViewer(user)","return":"drive.Folder","doc":"Removes the given user from the list of viewers and commenters for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#removeViewer(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user to remove"}]},{"name":"revokePermissions","signature":"revokePermissions(user)","return":"drive.Folder","doc":"Revokes the access to the Folder granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#revokePermissions(String)"},{"name":"revokePermissions","signature":"revokePermissions(user)","return":"drive.Folder","doc":"Revokes the access to the Folder granted to the given user.","url":"http://developers.google.com/apps-script/reference/drive/#revokePermissions(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user whose access should be revoked"}]},{"name":"searchFiles","signature":"searchFiles(params)","return":"drive.FileIterator","doc":"Gets a collection of all files that are children of the current folder and match the given search criteria.","url":"http://developers.google.com/apps-script/reference/drive/#searchFiles(String)","argument":[{"name":"params","type":"String","doc":"the search criteria, as detailed in the Google Drive SDK documentation"}]},{"name":"searchFolders","signature":"searchFolders(params)","return":"drive.FolderIterator","doc":"Gets a collection of all folders that are children of the current folder and match the given search criteria.","url":"http://developers.google.com/apps-script/reference/drive/#searchFolders(String)","argument":[{"name":"params","type":"String","doc":"the search criteria, as detailed in the Google Drive SDK documentation"}]},{"name":"setDescription","signature":"setDescription(description)","return":"drive.Folder","doc":"Sets the description for the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#setDescription(String)","argument":[{"name":"description","type":"String","doc":"the new description for the Folder"}]},{"name":"setName","signature":"setName(name)","return":"drive.Folder","doc":"Sets the name of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#setName(String)","argument":[{"name":"name","type":"String","doc":"the new name of the Folder"}]},{"name":"setOwner","signature":"setOwner(emailAddress)","return":"drive.Folder","doc":"Changes the owner of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#setOwner(String)","argument":[{"name":"emailAddress","type":"String","doc":"the email address of the user who should become the new owner"}]},{"name":"setOwner","signature":"setOwner(user)","return":"drive.Folder","doc":"Changes the owner of the Folder.","url":"http://developers.google.com/apps-script/reference/drive/#setOwner(User)","argument":[{"name":"user","type":"base.User","doc":"a representation of the user who should become the new owner"}]},{"name":"setShareableByEditors","signature":"setShareableByEditors(shareable)","return":"drive.Folder","doc":"Sets whether users with edit permissions to the Folder are allowed to share with other users or change the permissions.","url":"http://developers.google.com/apps-script/reference/drive/#setShareableByEditors(Boolean)","argument":[{"name":"shareable","type":"Boolean","doc":"true if users with edit permissions should be allowed to share with other users or change the permissions; false if not"}]},{"name":"setSharing","signature":"setSharing(accessType, permissionType)","return":"drive.Folder","doc":"Sets which class of users can access the Folder and what permissions those users are granted, besides any individual users who have been explicitly given access.","url":"http://developers.google.com/apps-script/reference/drive/#setSharing(Access,Permission)","argument":[{"name":"accessType","type":"drive.Access","doc":"which class of users should be able to access the Folder"},{"name":"permissionType","type":"drive.Permission","doc":"the permissions that should be granted to users who can access the Folder"}]},{"name":"setStarred","signature":"setStarred(starred)","return":"drive.Folder","doc":"Sets whether the Folder is starred in the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#setStarred(Boolean)","argument":[{"name":"starred","type":"Boolean","doc":"true if the Folder should be starred in the user's Drive; false if not"}]},{"name":"setTrashed","signature":"setTrashed(trashed)","return":"drive.Folder","doc":"Sets whether the Folder is in the trash of the user's Drive.","url":"http://developers.google.com/apps-script/reference/drive/#setTrashed(Boolean)","argument":[{"name":"trashed","type":"Boolean","doc":"true if the Folder should be moved to the trash of the user's Drive; false if not"}]}]},"drive.FolderIterator":{"name":"FolderIterator","kind":"class","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/folder-iterator","doc":"FolderIterator An object that allows scripts to iterate over a potentially large collection of folders. Folder iterators can be acccessed from DriveApp, a File, or a Folder. // Log the name of every folder in the user's Drive. var folders = DriveApp.getFolders(); while (folders.hasNext()) { var folder = folders.next(); Logger.log(folder.getName()); }","property":[],"method":[{"name":"getContinuationToken","signature":"getContinuationToken()","return":"String","doc":"Gets a token that can be used to resume this iteration at a later time.","url":"http://developers.google.com/apps-script/reference/drive/#getContinuationToken()","argument":[]},{"name":"hasNext","signature":"hasNext()","return":"Boolean","doc":"Determines whether calling next() will return an item.","url":"http://developers.google.com/apps-script/reference/drive/#hasNext()","argument":[]},{"name":"next","signature":"next()","return":"drive.Folder","doc":"Gets the next item in the collection of files or folders.","url":"http://developers.google.com/apps-script/reference/drive/#next()","argument":[]}]},"drive.User":{"name":"User","kind":"class","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/user","doc":"User A user associated with a file in Google Drive. Users can be accessed from File.getEditors(), Folder.getViewers(), and other methods. // Log the email address of all users who have edit access to a file. var file = DriveApp.getFileById('1234567890abcdefghijklmnopqrstuvwxyz'); var editors = file.getEditors(); for (var i = 0; i < editors.length; i++) { Logger.log(editors[i].getEmail()); }","property":[],"method":[{"name":"getDomain","signature":"getDomain()","return":"String","doc":"Gets the domain name associated with the user's account.","url":"http://developers.google.com/apps-script/reference/drive/#getDomain()","argument":[]},{"name":"getEmail","signature":"getEmail()","return":"String","doc":"Gets the user's email address.","url":"http://developers.google.com/apps-script/reference/drive/#getEmail()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the user's name.","url":"http://developers.google.com/apps-script/reference/drive/#getName()","argument":[]},{"name":"getPhotoUrl","signature":"getPhotoUrl()","return":"String","doc":"Gets the URL for the user's photo.","url":"http://developers.google.com/apps-script/reference/drive/#getPhotoUrl()","argument":[]}]},"drive.Access":{"name":"Access","kind":"enum","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/access","doc":"Access An enum representing classes of users who can access a file or folder, besides any individual users who have been explicitly given access. These properties can be accessed from DriveApp.Access. // Creates a folder that anyone on the Internet can read from and write to. (Domain // administrators can prohibit this setting for users of Google Apps for Business, Google Apps // for Education, or Google Apps for Your Domain.) var folder = DriveApp.createFolder('Shared Folder'); folder.setSharing(DriveApp.Access.ANYONE, DriveApp.Permission.EDIT);","property":[{"name":"ANYONE","type":"Enum","doc":"Anyone on the Internet can find and access. No sign-in required. Domain administrators can prohibit this setting for users of Google Apps for Business, Google Apps for Education, or Google Apps for Your Domain. If the setting is disabled, passing this value to File.setSharing(accessType, permissionType) throws an exception."},{"name":"ANYONE_WITH_LINK","type":"Enum","doc":"Anyone who has the link can access. No sign-in required. Domain administrators can prohibit this setting for users of Google Apps for Business, Google Apps for Education, or Google Apps for Your Domain. If the setting is disabled, passing this value to File.setSharing(accessType, permissionType) throws an exception."},{"name":"DOMAIN","type":"Enum","doc":"People in your domain can find and access. Sign-in required. This setting is available only for users of Google Apps for Business, Google Apps for Education, or Google Apps for Your Domain. For other types of Google accounts, passing this value to File.setSharing(accessType, permissionType) throws an exception."},{"name":"DOMAIN_WITH_LINK","type":"Enum","doc":"People in your domain who have the link can access. Sign-in required. This setting is available only for users of Google Apps for Business, Google Apps for Education, or Google Apps for Your Domain. For other types of Google accounts, passing this value to File.setSharing(accessType, permissionType) throws an exception."},{"name":"PRIVATE","type":"Enum","doc":"Only people explicitly granted permission can access. Sign-in required."}],"method":[]},"drive.Permission":{"name":"Permission","kind":"enum","global":false,"category":"drive","url":"http://developers.google.com/apps-script/reference/drive/permission","doc":"Permission An enum representing the permissions granted to users who can access a file or folder, besides any individual users who have been explicitly given access. These properties can be accessed from DriveApp.Permission. // Creates a folder that anyone on the Internet can read from and write to. (Domain // administrators can prohibit this setting for users of Google Apps for Business, Google Apps // for Education, or Google Apps for Your Domain.) var folder = DriveApp.createFolder('Shared Folder'); folder.setSharing(DriveApp.Access.ANYONE, DriveApp.Permission.EDIT);","property":[{"name":"VIEW","type":"Enum","doc":"Users who can access the file or folder are able only to view it or copy it. Passing this value to File.setSharing(accessType, permissionType) throws an exception if the type of file does not support it."},{"name":"EDIT","type":"Enum","doc":"Users who can access the file or folder are able to edit it. Unless File.setShareableByEditors(shareable) is set to false, users can also change the sharing settings. Passing this value to File.setSharing(accessType, permissionType) throws an exception if the type of file does not support it."},{"name":"COMMENT","type":"Enum","doc":"Users who can access the file or folder are able only to view it, copy it, or comment on it. Passing this value to File.setSharing(accessType, permissionType) throws an exception if the type of file does not support it."},{"name":"OWNER","type":"Enum","doc":"The user owns the file or folder. This value can be returned, but passing it to File.setSharing(accessType, permissionType) throws an exception."},{"name":"NONE","type":"Enum","doc":"The user does not have any permissions for the file or folder. This value can be returned, but passing it to File.setSharing(accessType, permissionType) throws an exception unless it is set in combination with Access.ANYONE."}],"method":[]}}