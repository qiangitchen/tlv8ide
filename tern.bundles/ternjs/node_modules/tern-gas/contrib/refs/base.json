{"base.Browser":{"name":"Browser","kind":"class","global":true,"category":"base","url":"http://developers.google.com/apps-script/reference/base/browser","doc":"Browser This class provides access to Google Apps specific dialog boxes. The methods in this class are only available for use in the context of a Google Spreadsheet. See also ButtonSet","property":[{"name":"Buttons","type":"base.ButtonSet","doc":""}],"method":[{"name":"inputBox","signature":"inputBox(prompt)","return":"String","doc":"Pops up a dialog box with a text input box in the user's browser.","url":"http://developers.google.com/apps-script/reference/base/#inputBox(String)","argument":[{"name":"prompt","type":"String","doc":"the text to be displayed in the dialog box"}]},{"name":"inputBox","signature":"inputBox(prompt, buttons)","return":"String","doc":"Pops up a dialog box with a text input box in the user's browser.","url":"http://developers.google.com/apps-script/reference/base/#inputBox(String,ButtonSet)","argument":[{"name":"prompt","type":"String","doc":"the text to be displayed in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"an enum from Browser.Buttons"}]},{"name":"inputBox","signature":"inputBox(title, prompt, buttons)","return":"String","doc":"Pops up a dialog box with a text input box in the user's browser.","url":"http://developers.google.com/apps-script/reference/base/#inputBox(String,String,ButtonSet)","argument":[{"name":"title","type":"String","doc":"the title for the dialog box"},{"name":"prompt","type":"String","doc":"the text to be displayed in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"an enum from Browser.Buttons"}]},{"name":"msgBox","signature":"msgBox(prompt)","return":"String","doc":"Pops up a dialog box with the given message and an OK button in the user's browser.","url":"http://developers.google.com/apps-script/reference/base/#msgBox(String)","argument":[{"name":"prompt","type":"String","doc":"the text to be displayed in the dialog box"}]},{"name":"msgBox","signature":"msgBox(prompt, buttons)","return":"String","doc":"Pops up a dialog box with the given message and specified buttons in the user's browser.","url":"http://developers.google.com/apps-script/reference/base/#msgBox(String,ButtonSet)","argument":[{"name":"prompt","type":"String","doc":"the text to be displayed in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"an enum from Browser.Buttons"}]},{"name":"msgBox","signature":"msgBox(title, prompt, buttons)","return":"String","doc":"Pops up a dialog box with the given title, message and specified buttons in the user's browser.","url":"http://developers.google.com/apps-script/reference/base/#msgBox(String,String,ButtonSet)","argument":[{"name":"title","type":"String","doc":"the title of the dialog box"},{"name":"prompt","type":"String","doc":"the text to be displayed in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"an enum from Browser.Buttons"}]}]},"base.Logger":{"name":"Logger","kind":"class","global":true,"category":"base","url":"http://developers.google.com/apps-script/reference/base/logger","doc":"Logger This class allows the developer to write out text to the debugging logs.","property":[],"method":[{"name":"clear","signature":"clear()","return":"void","doc":"Clears the log.","url":"http://developers.google.com/apps-script/reference/base/#clear()","argument":[]},{"name":"getLog","signature":"getLog()","return":"String","doc":"Returns a complete list of messages in the current log.","url":"http://developers.google.com/apps-script/reference/base/#getLog()","argument":[]},{"name":"log","signature":"log(data)","return":"base.Logger","doc":"Writes the string to the logging console.","url":"http://developers.google.com/apps-script/reference/base/#log(Object)","argument":[{"name":"data","type":"Object","doc":"the message to log"}]},{"name":"log","signature":"log(format, values)","return":"base.Logger","doc":"Writes a formatted string to the logging console, using the format and values provided.","url":"http://developers.google.com/apps-script/reference/base/#log(String,Object...)","argument":[{"name":"format","type":"String","doc":"a format string that contains as many instances of %s as the number of values arguments"},{"name":"values","type":"Object...","doc":"a variable number of values to insert into the format string"}]}]},"base.MimeType":{"name":"MimeType","kind":"class","global":true,"category":"base","url":"http://developers.google.com/apps-script/reference/base/mime-type","doc":"MimeType An enumeration that provides access to MIME-type declarations without typing the strings explicitly. Any method that expects a MIME type rendered as a string (for example, 'image/png') will also accept one of the values below, so long as the method supports the underlying MIME type. // Use MimeType enum to log the name of every Google Doc in the user's Drive. var docs = DriveApp.getFilesByType(MimeType.GOOGLE_DOCS); while (docs.hasNext()) { var doc = docs.next(); Logger.log(doc.getName()) } // Use plain string to log the size of every PNG in the user's Drive. var pngs = DriveApp.getFilesByType('image/png'); while (pngs.hasNext()) { var png = pngs.next(); Logger.log(png.getSize()); }","property":[{"name":"GOOGLE_APPS_SCRIPT","type":"Enum","doc":"Representation of MIME type for a Google Apps Script project."},{"name":"GOOGLE_DRAWINGS","type":"Enum","doc":"Representation of MIME type for a Google Drawings file."},{"name":"GOOGLE_DOCS","type":"Enum","doc":"Representation of MIME type for a Google Docs file."},{"name":"GOOGLE_FORMS","type":"Enum","doc":"Representation of MIME type for a Google Forms file."},{"name":"GOOGLE_SHEETS","type":"Enum","doc":"Representation of MIME type for a Google Sheets file."},{"name":"GOOGLE_SLIDES","type":"Enum","doc":"Representation of MIME type for a Google Slides file."},{"name":"FOLDER","type":"Enum","doc":"Representation of MIME type for a Google Drive folder."},{"name":"BMP","type":"Enum","doc":"Representation of MIME type for a BMP image file (typically .bmp)."},{"name":"GIF","type":"Enum","doc":"Representation of MIME type for a GIF image file (typically .gif)."},{"name":"JPEG","type":"Enum","doc":"Representation of MIME type for a JPEG image file (typically .jpg)."},{"name":"PNG","type":"Enum","doc":"Representation of MIME type for a PNG image file (typically .png)."},{"name":"SVG","type":"Enum","doc":"Representation of MIME type for an SVG image file (typically .svg)."},{"name":"PDF","type":"Enum","doc":"Representation of MIME type for a PDF file (typically .pdf)."},{"name":"CSS","type":"Enum","doc":"Representation of MIME type for a CSS text file (typically .css)."},{"name":"CSV","type":"Enum","doc":"Representation of MIME type for a CSV text file (typically .csv)."},{"name":"HTML","type":"Enum","doc":"Representation of MIME type for an HTML text file (typically .html)."},{"name":"JAVASCRIPT","type":"Enum","doc":"Representation of MIME type for a JavaScript text file (typically .js)."},{"name":"PLAIN_TEXT","type":"Enum","doc":"Representation of MIME type for a plain text file (typically .txt)."},{"name":"RTF","type":"Enum","doc":"Representation of MIME type for a rich text file (typically .rtf)."},{"name":"OPENDOCUMENT_GRAPHICS","type":"Enum","doc":"Representation of MIME type for an OpenDocument graphics file (typically .odg)."},{"name":"OPENDOCUMENT_PRESENTATION","type":"Enum","doc":"Representation of MIME type for an OpenDocument presentation file (typically .odp)."},{"name":"OPENDOCUMENT_SPREADSHEET","type":"Enum","doc":"Representation of MIME type for an OpenDocument spreadsheet file (typically .ods)."},{"name":"OPENDOCUMENT_TEXT","type":"Enum","doc":"Representation of MIME type for an OpenDocument word-processing file (typically .odt)."},{"name":"MICROSOFT_EXCEL","type":"Enum","doc":"Representation of MIME type for a Microsoft Excel spreadsheet file (typically .xlsx)."},{"name":"MICROSOFT_EXCEL_LEGACY","type":"Enum","doc":"Representation of MIME type for a Microsoft Excel legacy file (typically .xls)."},{"name":"MICROSOFT_POWERPOINT","type":"Enum","doc":"Representation of MIME type for a Microsoft PowerPoint presentation file (typically .pptx)."},{"name":"MICROSOFT_POWERPOINT_LEGACY","type":"Enum","doc":"Representation of MIME type for a Microsoft PowerPoint legacy file (typically .ppt)."},{"name":"MICROSOFT_WORD","type":"Enum","doc":"Representation of MIME type for a Microsoft Word document file (typically .docx)."},{"name":"MICROSOFT_WORD_LEGACY","type":"Enum","doc":"Representation of MIME type for a Microsoft Word legacy file (typically .doc)."},{"name":"ZIP","type":"Enum","doc":"Representation of MIME type for a ZIP archive file (typically .zip)."}],"method":[]},"base.Session":{"name":"Session","kind":"class","global":true,"category":"base","url":"http://developers.google.com/apps-script/reference/base/session","doc":"Session The Session class provides access to session information, such as the user's email address (in some circumstances) and language setting.","property":[],"method":[{"name":"getActiveUser","signature":"getActiveUser()","return":"base.User","doc":"Gets information about the current user.","url":"http://developers.google.com/apps-script/reference/base/#getActiveUser()","argument":[]},{"name":"getActiveUserLocale","signature":"getActiveUserLocale()","return":"String","doc":"Gets the language setting of the current user as a two-letter string â€” for example, en for English.","url":"http://developers.google.com/apps-script/reference/base/#getActiveUserLocale()","argument":[]},{"name":"getEffectiveUser","signature":"getEffectiveUser()","return":"base.User","doc":"Gets information about the user under whose authority the script is running.","url":"http://developers.google.com/apps-script/reference/base/#getEffectiveUser()","argument":[]},{"name":"getScriptTimeZone","signature":"getScriptTimeZone()","return":"String","doc":"Gets the time zone of the script.","url":"http://developers.google.com/apps-script/reference/base/#getScriptTimeZone()","argument":[]}]},"base.Blob":{"name":"Blob","kind":"class","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/blob","doc":"Blob A data interchange object for Apps Script services.","property":[],"method":[{"name":"copyBlob","signature":"copyBlob()","return":"base.Blob","doc":"Returns a copy of this blob.","url":"http://developers.google.com/apps-script/reference/base/#copyBlob()","argument":[]},{"name":"getAs","signature":"getAs(contentType)","return":"base.Blob","doc":"Return the data inside this object as a blob converted to the specified content type.","url":"http://developers.google.com/apps-script/reference/base/#getAs(String)","argument":[{"name":"contentType","type":"String","doc":"the MIME type to convert to. For most blobs, 'application/pdf' is the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of 'image/bmp', 'image/gif', 'image/jpeg', or 'image/png' are also valid."}]},{"name":"getBytes","signature":"getBytes()","return":"Byte[]","doc":"Gets the data stored in this blob.","url":"http://developers.google.com/apps-script/reference/base/#getBytes()","argument":[]},{"name":"getContentType","signature":"getContentType()","return":"String","doc":"Gets the content type of the bytes in this blob.","url":"http://developers.google.com/apps-script/reference/base/#getContentType()","argument":[]},{"name":"getDataAsString","signature":"getDataAsString()","return":"String","doc":"Gets the data of this blob as a String with UTF-8 encoding.","url":"http://developers.google.com/apps-script/reference/base/#getDataAsString()","argument":[]},{"name":"getDataAsString","signature":"getDataAsString(charset)","return":"String","doc":"Gets the data of this blob as a string with the specified encoding.","url":"http://developers.google.com/apps-script/reference/base/#getDataAsString(String)","argument":[{"name":"charset","type":"String","doc":"the charset to use in encoding the data in this blob as a string"}]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the name of this blob.","url":"http://developers.google.com/apps-script/reference/base/#getName()","argument":[]},{"name":"isGoogleType","signature":"isGoogleType()","return":"Boolean","doc":"Returns whether this blob is a Google Apps file (Sheets, Docs, etc.).","url":"http://developers.google.com/apps-script/reference/base/#isGoogleType()","argument":[]},{"name":"setBytes","signature":"setBytes(data)","return":"base.Blob","doc":"Sets the data stored in this blob.","url":"http://developers.google.com/apps-script/reference/base/#setBytes(Byte)","argument":[{"name":"data","type":"Byte[]","doc":"the new data"}]},{"name":"setContentType","signature":"setContentType(contentType)","return":"base.Blob","doc":"Sets the content type of the bytes in this blob.","url":"http://developers.google.com/apps-script/reference/base/#setContentType(String)","argument":[{"name":"contentType","type":"String","doc":"the new contentType"}]},{"name":"setContentTypeFromExtension","signature":"setContentTypeFromExtension()","return":"base.Blob","doc":"Sets the content type of the bytes in this blob based on the file extension.","url":"http://developers.google.com/apps-script/reference/base/#setContentTypeFromExtension()","argument":[]},{"name":"setDataFromString","signature":"setDataFromString(string)","return":"base.Blob","doc":"Sets the data of this blob from a string with UTF-8 encoding.","url":"http://developers.google.com/apps-script/reference/base/#setDataFromString(String)","argument":[{"name":"string","type":"String","doc":"the string data"}]},{"name":"setDataFromString","signature":"setDataFromString(string, charset)","return":"base.Blob","doc":"Sets the data of this blob from a string with the specified encoding.","url":"http://developers.google.com/apps-script/reference/base/#setDataFromString(String,String)","argument":[{"name":"string","type":"String","doc":"the string data"},{"name":"charset","type":"String","doc":"the charset to use in interpreting the string as bytes"}]},{"name":"setName","signature":"setName(name)","return":"base.Blob","doc":"Sets the name of this blob.","url":"http://developers.google.com/apps-script/reference/base/#setName(String)","argument":[{"name":"name","type":"String","doc":"the new name"}]}]},"base.Menu":{"name":"Menu","kind":"class","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/menu","doc":"Menu A custom menu in an instance of the user interface for a Google App. A script can only interact with the UI for the current instance of an open document or form, and only if the script is container-bound to the document or form. For more information, see the guide to menus. // Add a custom menu to the active spreadsheet, including a separator and a sub-menu. function onOpen(e) { SpreadsheetApp.getUi() .createMenu('My Menu') .addItem('My Menu Item', 'myFunction') .addSeparator() .addSubMenu(SpreadsheetApp.getUi().createMenu('My Submenu') .addItem('One Submenu Item', 'mySecondFunction') .addItem('Another Submenu Item', 'myThirdFunction')) .addToUi(); }","property":[],"method":[{"name":"addItem","signature":"addItem(caption, functionName)","return":"base.Menu","doc":"Adds an item to the menu.","url":"http://developers.google.com/apps-script/reference/base/#addItem(String,String)","argument":[{"name":"caption","type":"String","doc":"the label for the menu item, with only the first word capitalized"},{"name":"functionName","type":"String","doc":"the name of the function to invoke when the user selects the item"}]},{"name":"addSeparator","signature":"addSeparator()","return":"base.Menu","doc":"Adds a visual separator to the menu.","url":"http://developers.google.com/apps-script/reference/base/#addSeparator()","argument":[]},{"name":"addSubMenu","signature":"addSubMenu(menu)","return":"base.Menu","doc":"Adds a sub-menu to the menu.","url":"http://developers.google.com/apps-script/reference/base/#addSubMenu(Menu)","argument":[{"name":"menu","type":"base.Menu","doc":"the sub-menu, constructed like a top-level menu"}]},{"name":"addToUi","signature":"addToUi()","return":"void","doc":"Inserts the menu into the instance of the editor's user interface.","url":"http://developers.google.com/apps-script/reference/base/#addToUi()","argument":[]}]},"base.PromptResponse":{"name":"PromptResponse","kind":"class","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/prompt-response","doc":"PromptResponse A response to a prompt dialog displayed in the user-interface environment for a Google App. The response contains any text the user entered in the dialog's input field and indicates which button the user clicked to dismiss the dialog. // Display a dialog box with a title, message, input field, and \"Yes\" and \"No\" buttons. The // user can also close the dialog by clicking the close button in its title bar. var ui = DocumentApp.getUi(); var response = ui.prompt('Getting to know you', 'May I know your name?', ui.ButtonSet.YES_NO); // Process the user's response. if (response.getSelectedButton() == ui.Button.YES) { Logger.log('The user\\'s name is %s.', response.getResponseText()); } else if (response.getSelectedButton() == ui.Button.NO) { Logger.log('The user didn\\'t want to provide a name.'); } else { Logger.log('The user clicked the close button in the dialog\\'s title bar.'); }","property":[],"method":[{"name":"getResponseText","signature":"getResponseText()","return":"String","doc":"Gets the text that the user entered in the dialog's input field.","url":"http://developers.google.com/apps-script/reference/base/#getResponseText()","argument":[]},{"name":"getSelectedButton","signature":"getSelectedButton()","return":"base.Button","doc":"Gets the button that the user clicked to dismiss the dialog.","url":"http://developers.google.com/apps-script/reference/base/#getSelectedButton()","argument":[]}]},"base.Ui":{"name":"Ui","kind":"class","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/ui","doc":"Ui An instance of the user-interface environment for a Google App that allows the script to add features like menus, dialogs, and sidebars. A script can only interact with the UI for the current instance of an open editor, and only if the script is container-bound to the editor. // Display a dialog box with a title, message, input field, and \"Yes\" and \"No\" buttons. The // user can also close the dialog by clicking the close button in its title bar. var ui = SpreadsheetApp.getUi(); var response = ui.prompt('Getting to know you', 'May I know your name?', ui.ButtonSet.YES_NO); // Process the user's response. if (response.getSelectedButton() == ui.Button.YES) { Logger.log('The user\\'s name is %s.', response.getResponseText()); } else if (response.getSelectedButton() == ui.Button.NO) { Logger.log('The user didn\\'t want to provide a name.'); } else { Logger.log('The user clicked the close button in the dialog\\'s title bar.'); }","property":[{"name":"Button","type":"base.Button","doc":"An enum representing predetermined, localized dialog buttons returned by an alert or PromptResponse.getSelectedButton() to indicate which button in a dialog the user clicked."},{"name":"ButtonSet","type":"base.ButtonSet","doc":"An enum representing predetermined, localized sets of one or more dialog buttons that can be added to an alert or a prompt."}],"method":[{"name":"alert","signature":"alert(prompt)","return":"base.Button","doc":"Opens a dialog box in the user's editor with the given message and an \"OK\" button.","url":"http://developers.google.com/apps-script/reference/base/#alert(String)","argument":[{"name":"prompt","type":"String","doc":"the message to display in the dialog box"}]},{"name":"alert","signature":"alert(prompt, buttons)","return":"base.Button","doc":"Opens a dialog box in the user's editor with the given message and set of buttons.","url":"http://developers.google.com/apps-script/reference/base/#alert(String,ButtonSet)","argument":[{"name":"prompt","type":"String","doc":"the message to display in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"the button set to display in the dialog box"}]},{"name":"alert","signature":"alert(title, prompt, buttons)","return":"base.Button","doc":"Opens a dialog box in the user's editor with the given title, message, and set of buttons.","url":"http://developers.google.com/apps-script/reference/base/#alert(String,String,ButtonSet)","argument":[{"name":"title","type":"String","doc":"the title to display above the dialog box"},{"name":"prompt","type":"String","doc":"the message to display in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"the button set to display in the dialog box"}]},{"name":"createAddonMenu","signature":"createAddonMenu()","return":"base.Menu","doc":"Creates a builder that can be used to insert a sub-menu into the editor's Add-on menu.","url":"http://developers.google.com/apps-script/reference/base/#createAddonMenu()","argument":[]},{"name":"createMenu","signature":"createMenu(caption)","return":"base.Menu","doc":"Creates a builder that can be used to add a menu to the editor's user interface.","url":"http://developers.google.com/apps-script/reference/base/#createMenu(String)","argument":[{"name":"caption","type":"String","doc":"the label for the menu, with all major words capitalized for a top-level menu, or only the first word capitalized for a sub-menu"}]},{"name":"prompt","signature":"prompt(prompt)","return":"base.PromptResponse","doc":"Opens an input dialog box in the user's editor with the given message and an \"OK\" button.","url":"http://developers.google.com/apps-script/reference/base/#prompt(String)","argument":[{"name":"prompt","type":"String","doc":"the message to display in the dialog box"}]},{"name":"prompt","signature":"prompt(prompt, buttons)","return":"base.PromptResponse","doc":"Opens an input dialog box in the user's editor with the given message and set of buttons.","url":"http://developers.google.com/apps-script/reference/base/#prompt(String,ButtonSet)","argument":[{"name":"prompt","type":"String","doc":"the message to display in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"the button set to display in the dialog box"}]},{"name":"prompt","signature":"prompt(title, prompt, buttons)","return":"base.PromptResponse","doc":"Opens an input dialog box in the user's editor with the given title, message, and set of buttons.","url":"http://developers.google.com/apps-script/reference/base/#prompt(String,String,ButtonSet)","argument":[{"name":"title","type":"String","doc":"the title to display above the dialog box"},{"name":"prompt","type":"String","doc":"the message to display in the dialog box"},{"name":"buttons","type":"base.ButtonSet","doc":"the button set to display in the dialog box"}]},{"name":"showModalDialog","signature":"showModalDialog(userInterface, title)","return":"void","doc":"Opens a modal dialog box in the user's editor with custom client-side content.","url":"http://developers.google.com/apps-script/reference/base/#showModalDialog(Object,String)","argument":[{"name":"userInterface","type":"Object","doc":"an HtmlOutput or UiInstance web app"},{"name":"title","type":"String","doc":"the title of the dialog; overrides any title set by calling setTitle() on the userInterface object"}]},{"name":"showModelessDialog","signature":"showModelessDialog(userInterface, title)","return":"void","doc":"Opens a modeless dialog box in the user's editor with custom client-side content.","url":"http://developers.google.com/apps-script/reference/base/#showModelessDialog(Object,String)","argument":[{"name":"userInterface","type":"Object","doc":"an HtmlOutput or UiInstance web app"},{"name":"title","type":"String","doc":"the title of the dialog; overrides any title set by calling setTitle() on the userInterface object"}]},{"name":"showSidebar","signature":"showSidebar(userInterface)","return":"void","doc":"Opens a sidebar in the user's editor with custom client-side content.","url":"http://developers.google.com/apps-script/reference/base/#showSidebar(Object)","argument":[{"name":"userInterface","type":"Object","doc":"an HtmlOutput or UiInstance web app"}]}]},"base.User":{"name":"User","kind":"class","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/user","doc":"User Representation of a user, suitable for scripting.","property":[],"method":[{"name":"getEmail","signature":"getEmail()","return":"String","doc":"Gets the user's email address, if available.","url":"http://developers.google.com/apps-script/reference/base/#getEmail()","argument":[]}]},"base.BlobSource":{"name":"BlobSource","kind":"interface","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/blob-source","doc":"BlobSource Interface for objects that can export their data as a Blob. Implementing classes NameBrief description AttachmentA Sites Attachment such as a file attached to a page. BlobA data interchange object for Apps Script services. ChartA Chart object, which can be embedded into documents, UI elements, or used as a static image. DocumentA document, containing rich text and elements such as tables and lists. EmbeddedChartRepresents a chart that has been embedded into a Spreadsheet. FileThis class contains methods to get information about the file and modify its contents. FileA file in Google Drive. GmailAttachmentAn attachment from Gmail. HTTPResponseThis class allows users to access specific information on HTTP responses. HtmlOutputAn HtmlOutput object that can be served from a script. InlineImageAn element representing an embedded image. JdbcBlobA JDBC Blob. JdbcClobA JDBC Clob. SpreadsheetThis class allows users to access and modify Google Sheets files. StaticMapAllows for the creation and decoration of static map images.","property":[],"method":[{"name":"getAs","signature":"getAs(contentType)","return":"base.Blob","doc":"Return the data inside this object as a blob converted to the specified content type.","url":"http://developers.google.com/apps-script/reference/base/#getAs(String)","argument":[{"name":"contentType","type":"String","doc":"the MIME type to convert to. For most blobs, 'application/pdf' is the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of 'image/bmp', 'image/gif', 'image/jpeg', or 'image/png' are also valid."}]},{"name":"getBlob","signature":"getBlob()","return":"base.Blob","doc":"Return the data inside this object as a blob.","url":"http://developers.google.com/apps-script/reference/base/#getBlob()","argument":[]}]},"base.Button":{"name":"Button","kind":"enum","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/button","doc":"Button An enum representing predetermined, localized dialog buttons returned by an alert or PromptResponse.getSelectedButton() to indicate which button in a dialog the user clicked. These values cannot be set; to add buttons to an alert or prompt, use ButtonSet instead. // Display a dialog box with a message and \"Yes\" and \"No\" buttons. var ui = DocumentApp.getUi(); var response = ui.alert('Are you sure you want to continue?', ui.ButtonSet.YES_NO); // Process the user's response. if (response == ui.Button.YES) { Logger.log('The user clicked \"Yes.\"'); } else { Logger.log('The user clicked \"No\" or the dialog\\'s close button.'); }","property":[{"name":"CLOSE","type":"Enum","doc":"The standard close button displayed in every dialog's title bar. This button is not explicitly added to a dialog, and it cannot be removed."},{"name":"OK","type":"Enum","doc":"An \"OK\" button, indicating that an operation should proceed."},{"name":"CANCEL","type":"Enum","doc":"A \"Cancel\" button, indicating that an operation should not proceed."},{"name":"YES","type":"Enum","doc":"A \"Yes\" button, indicating a positive response to a question."},{"name":"NO","type":"Enum","doc":"A \"No\" button, indicating a negative response to a question."}],"method":[]},"base.ButtonSet":{"name":"ButtonSet","kind":"enum","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/button-set","doc":"ButtonSet An enum representing predetermined, localized sets of one or more dialog buttons that can be added to an alert or a prompt. To determine which button the user clicked, use Button. // Display a dialog box with a message and \"Yes\" and \"No\" buttons. var ui = DocumentApp.getUi(); var response = ui.alert('Are you sure you want to continue?', ui.ButtonSet.YES_NO); // Process the user's response. if (response == ui.Button.YES) { Logger.log('The user clicked \"Yes.\"'); } else { Logger.log('The user clicked \"No\" or the dialog\\'s close button.'); }","property":[{"name":"OK","type":"Enum","doc":"A single \"OK\" button, indicating an informational message that can only be dismissed."},{"name":"OK_CANCEL","type":"Enum","doc":"An \"OK\" button and a \"Cancel\" button, allowing the user to either proceed with or halt an operation."},{"name":"YES_NO","type":"Enum","doc":"A \"Yes\" button and a \"No\" button, allowing the user to answer a yes/no question."},{"name":"YES_NO_CANCEL","type":"Enum","doc":"A \"Yes\" button, a \"No\" button, and a \"Cancel\" button, allowing the user to either answer a yes/no question or halt an operation."}],"method":[]},"base.Month":{"name":"Month","kind":"enum","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/month","doc":"Month An enum representing the months of the year.","property":[{"name":"JANUARY","type":"Enum","doc":"January (month 1)."},{"name":"FEBRUARY","type":"Enum","doc":"February (month 2)."},{"name":"MARCH","type":"Enum","doc":"March (month 3)."},{"name":"APRIL","type":"Enum","doc":"April (month 4)."},{"name":"MAY","type":"Enum","doc":"May (month 5)."},{"name":"JUNE","type":"Enum","doc":"June (month 6)."},{"name":"JULY","type":"Enum","doc":"July (month 7)."},{"name":"AUGUST","type":"Enum","doc":"August (month 8)."},{"name":"SEPTEMBER","type":"Enum","doc":"September (month 9)."},{"name":"OCTOBER","type":"Enum","doc":"October (month 10)."},{"name":"NOVEMBER","type":"Enum","doc":"November (month 11)."},{"name":"DECEMBER","type":"Enum","doc":"December (month 12)."}],"method":[]},"base.Weekday":{"name":"Weekday","kind":"enum","global":false,"category":"base","url":"http://developers.google.com/apps-script/reference/base/weekday","doc":"Weekday An enum representing the days of the week.","property":[{"name":"SUNDAY","type":"Enum","doc":"Sunday."},{"name":"MONDAY","type":"Enum","doc":"Monday."},{"name":"TUESDAY","type":"Enum","doc":"Tuesday."},{"name":"WEDNESDAY","type":"Enum","doc":"Wednesday."},{"name":"THURSDAY","type":"Enum","doc":"Thursday."},{"name":"FRIDAY","type":"Enum","doc":"Friday."},{"name":"SATURDAY","type":"Enum","doc":"Saturday."}],"method":[]}}