{"xmlservice.XmlService":{"name":"XmlService","kind":"class","global":true,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/xml-service","doc":"XmlService This service allows scripts to parse, navigate, and programmatically create XML documents. // Log the title and labels for the first page of blog posts on the Google Apps Developer blog. function parseXml() { var url = 'http://googleappsdeveloper.blogspot.com/atom.xml'; var xml = UrlFetchApp.fetch(url).getContentText(); var document = XmlService.parse(xml); var root = document.getRootElement(); var atom = XmlService.getNamespace('http://www.w3.org/2005/Atom'); var entries = document.getRootElement().getChildren('entry', atom); for (var i = 0; i < entries.length; i++) { var title = entries[i].getChild('title', atom).getText(); var categoryElements = entries[i].getChildren('category', atom); var labels = []; for (var j = 0; j < categoryElements.length; j++) { labels.push(categoryElements[j].getAttribute('term').getValue()); } Logger.log('%s (%s)', title, labels.join(', ')); } } // Create and log an XML representation of the threads in your Gmail inbox. function createXml() { var root = XmlService.createElement('threads'); var threads = GmailApp.getInboxThreads(); for (var i = 0; i < threads.length; i++) { var child = XmlService.createElement('thread') .setAttribute('messageCount', threads[i].getMessageCount()) .setAttribute('isUnread', threads[i].isUnread()) .setText(threads[i].getFirstMessageSubject()); root.addContent(child); } var document = XmlService.createDocument(root); var xml = XmlService.getPrettyFormat().format(document); Logger.log(xml); }","property":[{"name":"ContentTypes","type":"xmlservice.ContentType","doc":"An enumeration representing the types of XML content nodes."}],"method":[{"name":"createCdata","signature":"createCdata(text)","return":"xmlservice.Cdata","doc":"Creates an unattached CDATASection node with the given value.","url":"http://developers.google.com/apps-script/reference/xml-service/#createCdata(String)","argument":[{"name":"text","type":"String","doc":"the value to set"}]},{"name":"createComment","signature":"createComment(text)","return":"xmlservice.Comment","doc":"Creates an unattached Comment node with the given value.","url":"http://developers.google.com/apps-script/reference/xml-service/#createComment(String)","argument":[{"name":"text","type":"String","doc":"the value to set"}]},{"name":"createDocType","signature":"createDocType(elementName)","return":"xmlservice.DocType","doc":"Creates an unattached DocumentType node for the root Element node with the given name.","url":"http://developers.google.com/apps-script/reference/xml-service/#createDocType(String)","argument":[{"name":"elementName","type":"String","doc":"the name of the root Element node to specify in the DocType declaration"}]},{"name":"createDocType","signature":"createDocType(elementName, systemId)","return":"xmlservice.DocType","doc":"Creates an unattached DocumentType node for the root Element node with the given name, and the given system ID for the external subset data.","url":"http://developers.google.com/apps-script/reference/xml-service/#createDocType(String,String)","argument":[{"name":"elementName","type":"String","doc":"the name of the root Element node to specify in the DocType declaration"},{"name":"systemId","type":"String","doc":"the system ID of the external subset data to set"}]},{"name":"createDocType","signature":"createDocType(elementName, publicId, systemId)","return":"xmlservice.DocType","doc":"Creates an unattached DocumentType node for the root Element node with the given name, and the given public ID and system ID for the external subset data.","url":"http://developers.google.com/apps-script/reference/xml-service/#createDocType(String,String,String)","argument":[{"name":"elementName","type":"String","doc":"the name of the root Element node to specify in the DocType declaration"},{"name":"publicId","type":"String","doc":"the public ID of the external subset data to set"},{"name":"systemId","type":"String","doc":"the system ID of the external subset data to set"}]},{"name":"createDocument","signature":"createDocument()","return":"xmlservice.Document","doc":"Creates an empty XML document.","url":"http://developers.google.com/apps-script/reference/xml-service/#createDocument()","argument":[]},{"name":"createDocument","signature":"createDocument(rootElement)","return":"xmlservice.Document","doc":"Creates an XML document with the given root Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#createDocument(Element)","argument":[{"name":"rootElement","type":"xmlservice.Element","doc":"the root Element node to set"}]},{"name":"createElement","signature":"createElement(name)","return":"xmlservice.Element","doc":"Creates an unattached Element node with the given local name and no namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#createElement(String)","argument":[{"name":"name","type":"String","doc":"the local name to set"}]},{"name":"createElement","signature":"createElement(name, namespace)","return":"xmlservice.Element","doc":"Creates an unattached Element node with the given local name and namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#createElement(String,Namespace)","argument":[{"name":"name","type":"String","doc":"the local name to set"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace to set"}]},{"name":"createText","signature":"createText(text)","return":"xmlservice.Text","doc":"Creates an unattached Text node with the given value.","url":"http://developers.google.com/apps-script/reference/xml-service/#createText(String)","argument":[{"name":"text","type":"String","doc":"the value to set"}]},{"name":"getCompactFormat","signature":"getCompactFormat()","return":"xmlservice.Format","doc":"Creates a Format object for outputting a compact XML document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getCompactFormat()","argument":[]},{"name":"getNamespace","signature":"getNamespace(uri)","return":"xmlservice.Namespace","doc":"Creates a Namespace with the given URI.","url":"http://developers.google.com/apps-script/reference/xml-service/#getNamespace(String)","argument":[{"name":"uri","type":"String","doc":"the URI for the namespace"}]},{"name":"getNamespace","signature":"getNamespace(prefix, uri)","return":"xmlservice.Namespace","doc":"Creates a Namespace with the given prefix and URI.","url":"http://developers.google.com/apps-script/reference/xml-service/#getNamespace(String,String)","argument":[{"name":"prefix","type":"String","doc":"the prefix for the namespace"},{"name":"uri","type":"String","doc":"the URI for the namespace"}]},{"name":"getNoNamespace","signature":"getNoNamespace()","return":"xmlservice.Namespace","doc":"Creates a Namespace that represents the absence of a real namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#getNoNamespace()","argument":[]},{"name":"getPrettyFormat","signature":"getPrettyFormat()","return":"xmlservice.Format","doc":"Creates a Format object for outputting a human-readable XML document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getPrettyFormat()","argument":[]},{"name":"getRawFormat","signature":"getRawFormat()","return":"xmlservice.Format","doc":"Creates a Format object for outputting a raw XML document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getRawFormat()","argument":[]},{"name":"getXmlNamespace","signature":"getXmlNamespace()","return":"xmlservice.Namespace","doc":"Creates a Namespace with the standard xml prefix.","url":"http://developers.google.com/apps-script/reference/xml-service/#getXmlNamespace()","argument":[]},{"name":"parse","signature":"parse(xml)","return":"xmlservice.Document","doc":"Creates an Document from the given XML, without validating the XML.","url":"http://developers.google.com/apps-script/reference/xml-service/#parse(String)","argument":[{"name":"xml","type":"String","doc":"the XML to parse"}]}]},"xmlservice.Attribute":{"name":"Attribute","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/attribute","doc":"Attribute A representation of an XML attribute. // Reads the first and last name of each person and adds a new attribute with the full name. var xml = '\\ <roster> \\ <person first=\"John\" last=\"Doe\"/> \\ <person first=\"Mary\" last=\"Smith\"/> \\ </roster>'; var document = XmlService.parse(xml); var people = document.getRootElement().getChildren('person'); for (var i = 0; i < people.length; i++) { var person = people[i]; var firstName = person.getAttribute('first').getValue(); var lastName = person.getAttribute('last').getValue(); person.setAttribute('full', firstName + ' ' + lastName); } xml = XmlService.getPrettyFormat().format(document); Logger.log(xml);","property":[],"method":[{"name":"getName","signature":"getName()","return":"String","doc":"Gets the local name of the attribute.","url":"http://developers.google.com/apps-script/reference/xml-service/#getName()","argument":[]},{"name":"getNamespace","signature":"getNamespace()","return":"xmlservice.Namespace","doc":"Gets the namespace for the attribute.","url":"http://developers.google.com/apps-script/reference/xml-service/#getNamespace()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the value of the attribute.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"setName","signature":"setName(name)","return":"xmlservice.Attribute","doc":"Sets the local name of the attribute.","url":"http://developers.google.com/apps-script/reference/xml-service/#setName(String)","argument":[{"name":"name","type":"String","doc":"the local name to set"}]},{"name":"setNamespace","signature":"setNamespace(namespace)","return":"xmlservice.Attribute","doc":"Sets the namespace for the attribute.","url":"http://developers.google.com/apps-script/reference/xml-service/#setNamespace(Namespace)","argument":[{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace to set"}]},{"name":"setValue","signature":"setValue(value)","return":"xmlservice.Attribute","doc":"Sets the value of the attribute.","url":"http://developers.google.com/apps-script/reference/xml-service/#setValue(String)","argument":[{"name":"value","type":"String","doc":"the value to set"}]}]},"xmlservice.Cdata":{"name":"Cdata","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/cdata","doc":"Cdata A representation of an XML CDATASection node. // Create and log an XML document that shows how special characters like '<', '>', and '&' are // stored in a CDATASection node as compared to in a Text node. var illegalCharacters = '<em>The Amazing Adventures of Kavalier & Clay</em>'; var cdata = XmlService.createCdata(illegalCharacters); var text = XmlService.createText(illegalCharacters); var root = XmlService.createElement('root').addContent(cdata).addContent(text); var document = XmlService.createDocument(root); var xml = XmlService.getPrettyFormat().format(document); Logger.log(xml);","property":[],"method":[{"name":"append","signature":"append(text)","return":"xmlservice.Text","doc":"Appends the given text to any content that already exists in the node.","url":"http://developers.google.com/apps-script/reference/xml-service/#append(String)","argument":[{"name":"text","type":"String","doc":"the text to append to the node"}]},{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getText","signature":"getText()","return":"String","doc":"Gets the text value of the Text node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getText()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"setText","signature":"setText(text)","return":"xmlservice.Text","doc":"Sets the text value of the Text node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setText(String)","argument":[{"name":"text","type":"String","doc":"the text value to set"}]}]},"xmlservice.Comment":{"name":"Comment","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/comment","doc":"Comment A representation of an XML Comment node.","property":[],"method":[{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getText","signature":"getText()","return":"String","doc":"Gets the text value of the Comment node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getText()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"setText","signature":"setText(text)","return":"xmlservice.Comment","doc":"Sets the text value of the Comment node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setText(String)","argument":[{"name":"text","type":"String","doc":"the text value to set"}]}]},"xmlservice.DocType":{"name":"DocType","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/doc-type","doc":"DocType A representation of an XML DocumentType node.","property":[],"method":[{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getElementName","signature":"getElementName()","return":"String","doc":"Gets the name of the root Element node specified in the DocType declaration.","url":"http://developers.google.com/apps-script/reference/xml-service/#getElementName()","argument":[]},{"name":"getInternalSubset","signature":"getInternalSubset()","return":"String","doc":"Gets the internal subset data for the DocumentType node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getInternalSubset()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getPublicId","signature":"getPublicId()","return":"String","doc":"Gets the public ID of the external subset data for the DocumentType node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getPublicId()","argument":[]},{"name":"getSystemId","signature":"getSystemId()","return":"String","doc":"Gets the system ID of the external subset data for the DocumentType node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getSystemId()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"setElementName","signature":"setElementName(name)","return":"xmlservice.DocType","doc":"Sets the name of the root Element node to specify in the DocType declaration.","url":"http://developers.google.com/apps-script/reference/xml-service/#setElementName(String)","argument":[{"name":"name","type":"String","doc":"the name of the root Element node to specify in the DocType declaration"}]},{"name":"setInternalSubset","signature":"setInternalSubset(data)","return":"xmlservice.DocType","doc":"Sets the internal subset data for the DocumentType node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setInternalSubset(String)","argument":[{"name":"data","type":"String","doc":"the internal subset data to set"}]},{"name":"setPublicId","signature":"setPublicId(id)","return":"xmlservice.DocType","doc":"Sets the public ID of the external subset data for the DocumentType node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setPublicId(String)","argument":[{"name":"id","type":"String","doc":"the public ID of the external subset data to set"}]},{"name":"setSystemId","signature":"setSystemId(id)","return":"xmlservice.DocType","doc":"Sets the system ID of the external subset data for the DocumentType node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setSystemId(String)","argument":[{"name":"id","type":"String","doc":"the system ID of the external subset data to set"}]}]},"xmlservice.Document":{"name":"Document","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/document","doc":"Document A representation of an XML document.","property":[],"method":[{"name":"addContent","signature":"addContent(content)","return":"xmlservice.Document","doc":"Appends the given node to the end of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#addContent(Content)","argument":[{"name":"content","type":"xmlservice.Content","doc":"the node to append"}]},{"name":"addContent","signature":"addContent(index, content)","return":"xmlservice.Document","doc":"Inserts the given node at the given index among all nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#addContent(Integer,Content)","argument":[{"name":"index","type":"Integer","doc":"the index at which to insert the node among all nodes that are immediate children of the document"},{"name":"content","type":"xmlservice.Content","doc":"the node to insert"}]},{"name":"cloneContent","signature":"cloneContent()","return":"xmlservice.Content[]","doc":"Creates unattached copies of all nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#cloneContent()","argument":[]},{"name":"detachRootElement","signature":"detachRootElement()","return":"xmlservice.Element","doc":"Detaches and returns the document's root Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detachRootElement()","argument":[]},{"name":"getAllContent","signature":"getAllContent()","return":"xmlservice.Content[]","doc":"Gets all nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getAllContent()","argument":[]},{"name":"getContent","signature":"getContent(index)","return":"xmlservice.Content","doc":"Gets the node at the given index among all nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getContent(Integer)","argument":[{"name":"index","type":"Integer","doc":"the index for the node among all nodes that are immediate children of the document"}]},{"name":"getContentSize","signature":"getContentSize()","return":"Integer","doc":"Gets the number of nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getContentSize()","argument":[]},{"name":"getDescendants","signature":"getDescendants()","return":"xmlservice.Content[]","doc":"Gets all nodes that are direct or indirect children of the document, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getDescendants()","argument":[]},{"name":"getDocType","signature":"getDocType()","return":"xmlservice.DocType","doc":"Gets the document's DocType declaration.","url":"http://developers.google.com/apps-script/reference/xml-service/#getDocType()","argument":[]},{"name":"getRootElement","signature":"getRootElement()","return":"xmlservice.Element","doc":"Gets the document's root Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getRootElement()","argument":[]},{"name":"hasRootElement","signature":"hasRootElement()","return":"Boolean","doc":"Determines whether the document has a root Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#hasRootElement()","argument":[]},{"name":"removeContent","signature":"removeContent()","return":"xmlservice.Content[]","doc":"Removes all nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeContent()","argument":[]},{"name":"removeContent","signature":"removeContent(content)","return":"Boolean","doc":"Removes the given node, if the node is an immediate child of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeContent(Content)","argument":[{"name":"content","type":"xmlservice.Content","doc":"the node to remove"}]},{"name":"removeContent","signature":"removeContent(index)","return":"xmlservice.Content","doc":"Removes the node at the given index among all nodes that are immediate children of the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeContent(Integer)","argument":[{"name":"index","type":"Integer","doc":"the index for the node among all nodes that are immediate children of the document"}]},{"name":"setDocType","signature":"setDocType(docType)","return":"xmlservice.Document","doc":"Sets the document's DocType declaration.","url":"http://developers.google.com/apps-script/reference/xml-service/#setDocType(DocType)","argument":[{"name":"docType","type":"xmlservice.DocType","doc":"the DocumentType to set"}]},{"name":"setRootElement","signature":"setRootElement(element)","return":"xmlservice.Document","doc":"Sets the document's root Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setRootElement(Element)","argument":[{"name":"element","type":"xmlservice.Element","doc":"the root Element node to set"}]}]},"xmlservice.Element":{"name":"Element","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/element","doc":"Element A representation of an XML Element node. // Adds up the values listed in a sample XML document and adds a new element with the total. var xml = '\\ <things> \\ <plates>12</plates> \\ <bowls>18</bowls> \\ <cups>25</cups> \\ </things>'; var document = XmlService.parse(xml); var root = document.getRootElement(); var items = root.getChildren(); var total = 0; for (var i = 0; i < items.length; i++) { total += Number(items[i].getText()); } var totalElement = XmlService.createElement('total').setText(total); root.addContent(totalElement); xml = XmlService.getPrettyFormat().format(document); Logger.log(xml);","property":[],"method":[{"name":"addContent","signature":"addContent(content)","return":"xmlservice.Element","doc":"Appends the given node as the last child of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#addContent(Content)","argument":[{"name":"content","type":"xmlservice.Content","doc":"the node to append"}]},{"name":"addContent","signature":"addContent(index, content)","return":"xmlservice.Element","doc":"Inserts the given node at the given index among all nodes that are immediate children of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#addContent(Integer,Content)","argument":[{"name":"index","type":"Integer","doc":"the index at which to insert the node among all nodes that are immediate children of the Element node"},{"name":"content","type":"xmlservice.Content","doc":"the node to insert"}]},{"name":"cloneContent","signature":"cloneContent()","return":"xmlservice.Content[]","doc":"Creates unattached copies of all nodes that are immediate children of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#cloneContent()","argument":[]},{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getAllContent","signature":"getAllContent()","return":"xmlservice.Content[]","doc":"Gets all nodes that are immediate children of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getAllContent()","argument":[]},{"name":"getAttribute","signature":"getAttribute(name)","return":"xmlservice.Attribute","doc":"Gets the attribute for this Element node with the given name and no namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#getAttribute(String)","argument":[{"name":"name","type":"String","doc":"the name of the attribute"}]},{"name":"getAttribute","signature":"getAttribute(name, namespace)","return":"xmlservice.Attribute","doc":"Gets the attribute for this Element node with the given name and namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#getAttribute(String,Namespace)","argument":[{"name":"name","type":"String","doc":"the name of the attribute"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace of the attribute"}]},{"name":"getAttributes","signature":"getAttributes()","return":"xmlservice.Attribute[]","doc":"Gets all attributes for this Element node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getAttributes()","argument":[]},{"name":"getChild","signature":"getChild(name)","return":"xmlservice.Element","doc":"Gets the first Element node with the given name and no namespace that is an immediate child of this Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChild(String)","argument":[{"name":"name","type":"String","doc":"the name of the child Element node"}]},{"name":"getChild","signature":"getChild(name, namespace)","return":"xmlservice.Element","doc":"Gets the first Element node with the given name and namespace that is an immediate child of this Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChild(String,Namespace)","argument":[{"name":"name","type":"String","doc":"the name of the child Element node"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace of the child Element node"}]},{"name":"getChildText","signature":"getChildText(name)","return":"String","doc":"Gets the text value of the node with the given name and no namespace, if the node is an immediate child of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChildText(String)","argument":[{"name":"name","type":"String","doc":"the name of the child node"}]},{"name":"getChildText","signature":"getChildText(name, namespace)","return":"String","doc":"Gets the text value of the node with the given name and namespace, if the node is an immediate child of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChildText(String,Namespace)","argument":[{"name":"name","type":"String","doc":"the name of the child node"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace of the child node"}]},{"name":"getChildren","signature":"getChildren()","return":"xmlservice.Element[]","doc":"Gets all Element nodes that are immediate children of this Element node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChildren()","argument":[]},{"name":"getChildren","signature":"getChildren(name)","return":"xmlservice.Element[]","doc":"Gets all Element nodes with the given name and no namespace that are immediate children of this Element node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChildren(String)","argument":[{"name":"name","type":"String","doc":"the name of the child Element nodes"}]},{"name":"getChildren","signature":"getChildren(name, namespace)","return":"xmlservice.Element[]","doc":"Gets all Element nodes with the given name and namespace that are immediate children of this Element node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getChildren(String,Namespace)","argument":[{"name":"name","type":"String","doc":"the name of the child Element nodes"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace of the child Element nodes"}]},{"name":"getContent","signature":"getContent(index)","return":"xmlservice.Content","doc":"Gets the node at the given index among all nodes that are immediate children of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getContent(Integer)","argument":[{"name":"index","type":"Integer","doc":"the index for the node among all nodes that are immediate children of the {@code Element} node"}]},{"name":"getContentSize","signature":"getContentSize()","return":"Integer","doc":"Gets the number of nodes that are immediate children of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getContentSize()","argument":[]},{"name":"getDescendants","signature":"getDescendants()","return":"xmlservice.Content[]","doc":"Gets all nodes that are direct or indirect children of the {@code Element} node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getDescendants()","argument":[]},{"name":"getDocument","signature":"getDocument()","return":"xmlservice.Document","doc":"Gets the XML document that contains the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getDocument()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the local name of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getName()","argument":[]},{"name":"getNamespace","signature":"getNamespace()","return":"xmlservice.Namespace","doc":"Gets the namespace for the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getNamespace()","argument":[]},{"name":"getNamespace","signature":"getNamespace(prefix)","return":"xmlservice.Namespace","doc":"Gets the namespace with the given prefix for the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getNamespace(String)","argument":[{"name":"prefix","type":"String","doc":"the prefix for the namespace"}]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getQualifiedName","signature":"getQualifiedName()","return":"String","doc":"Gets the local name and namespace prefix of the Element node, in the form [namespacePrefix]:[localName].","url":"http://developers.google.com/apps-script/reference/xml-service/#getQualifiedName()","argument":[]},{"name":"getText","signature":"getText()","return":"String","doc":"Gets the text value of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getText()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"isAncestorOf","signature":"isAncestorOf(other)","return":"Boolean","doc":"Determines whether this Element node is a direct or indirect parent of a given Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#isAncestorOf(Element)","argument":[{"name":"other","type":"xmlservice.Element","doc":"the other Element node"}]},{"name":"isRootElement","signature":"isRootElement()","return":"Boolean","doc":"Determines whether the Element node is the document's root node.","url":"http://developers.google.com/apps-script/reference/xml-service/#isRootElement()","argument":[]},{"name":"removeAttribute","signature":"removeAttribute(attribute)","return":"Boolean","doc":"Removes the given attribute for this Element node, if such an attribute exists.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeAttribute(Attribute)","argument":[{"name":"attribute","type":"xmlservice.Attribute","doc":"the attribute"}]},{"name":"removeAttribute","signature":"removeAttribute(attributeName)","return":"Boolean","doc":"Removes the attribute for this Element node with the given name and no namespace, if such an attribute exists.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeAttribute(String)","argument":[{"name":"attributeName","type":"String","doc":"the name of the attribute"}]},{"name":"removeAttribute","signature":"removeAttribute(attributeName, namespace)","return":"Boolean","doc":"Removes the attribute for this Element node with the given name and namespace, if such an attribute exists.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeAttribute(String,Namespace)","argument":[{"name":"attributeName","type":"String","doc":"the name of the attribute"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace of the attribute"}]},{"name":"removeContent","signature":"removeContent()","return":"xmlservice.Content[]","doc":"Removes all nodes that are immediate children of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeContent()","argument":[]},{"name":"removeContent","signature":"removeContent(content)","return":"Boolean","doc":"Removes the given node, if the node is an immediate child of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeContent(Content)","argument":[{"name":"content","type":"xmlservice.Content","doc":"the node to remove"}]},{"name":"removeContent","signature":"removeContent(index)","return":"xmlservice.Content","doc":"Removes the node at the given index among all nodes that are immediate children of the {@code Element} node.","url":"http://developers.google.com/apps-script/reference/xml-service/#removeContent(Integer)","argument":[{"name":"index","type":"Integer","doc":"the index for the node among all nodes that are immediate children of the {@code Element} node"}]},{"name":"setAttribute","signature":"setAttribute(attribute)","return":"xmlservice.Element","doc":"Sets the given attribute for this Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setAttribute(Attribute)","argument":[{"name":"attribute","type":"xmlservice.Attribute","doc":"the attribute to set"}]},{"name":"setAttribute","signature":"setAttribute(name, value)","return":"xmlservice.Element","doc":"Sets the attribute for this Element node with the given name, value, and no namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#setAttribute(String,String)","argument":[{"name":"name","type":"String","doc":"the name of the attribute to set"},{"name":"value","type":"String","doc":"the value of the attribute to set"}]},{"name":"setAttribute","signature":"setAttribute(name, value, namespace)","return":"xmlservice.Element","doc":"Sets the attribute for this Element node with the given name, value, and namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#setAttribute(String,String,Namespace)","argument":[{"name":"name","type":"String","doc":"the name of the attribute to set"},{"name":"value","type":"String","doc":"the value of the attribute to set"},{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace of the attribute to set"}]},{"name":"setName","signature":"setName(name)","return":"xmlservice.Element","doc":"Sets the local name of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setName(String)","argument":[{"name":"name","type":"String","doc":"the local name to set"}]},{"name":"setNamespace","signature":"setNamespace(namespace)","return":"xmlservice.Element","doc":"Sets the namespace for the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setNamespace(Namespace)","argument":[{"name":"namespace","type":"xmlservice.Namespace","doc":"the namespace to set"}]},{"name":"setText","signature":"setText(text)","return":"xmlservice.Element","doc":"Sets the text value of the Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setText(String)","argument":[{"name":"text","type":"String","doc":"the text to set"}]}]},"xmlservice.EntityRef":{"name":"EntityRef","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/entity-ref","doc":"EntityRef A representation of an XML EntityReference node.","property":[],"method":[{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getName","signature":"getName()","return":"String","doc":"Gets the name of the EntityReference node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getName()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getPublicId","signature":"getPublicId()","return":"String","doc":"Gets the public ID of the EntityReference node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getPublicId()","argument":[]},{"name":"getSystemId","signature":"getSystemId()","return":"String","doc":"Gets the system ID of the EntityReference node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getSystemId()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"setName","signature":"setName(name)","return":"xmlservice.EntityRef","doc":"Sets the name of the EntityReference node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setName(String)","argument":[{"name":"name","type":"String","doc":"the name to set"}]},{"name":"setPublicId","signature":"setPublicId(id)","return":"xmlservice.EntityRef","doc":"Sets the public ID of the EntityReference node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setPublicId(String)","argument":[{"name":"id","type":"String","doc":"the public ID to set"}]},{"name":"setSystemId","signature":"setSystemId(id)","return":"xmlservice.EntityRef","doc":"Sets the system ID of the EntityReference node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setSystemId(String)","argument":[{"name":"id","type":"String","doc":"the system ID to set"}]}]},"xmlservice.Format":{"name":"Format","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/format","doc":"Format A formatter for outputting an XML document, with three pre-defined formats that can be further customized. // Log an XML document with specified formatting options. var xml = '<root><a><b>Text!</b><b>More text!</b></a></root>'; var document = XmlService.parse(xml); var output = XmlService.getCompactFormat() .setLineSeparator('\\n') .setEncoding('UTF-8') .setIndent(' ') .format(document); Logger.log(output);","property":[],"method":[{"name":"format","signature":"format(document)","return":"String","doc":"Outputs the given Document as a formatted string.","url":"http://developers.google.com/apps-script/reference/xml-service/#format(Document)","argument":[{"name":"document","type":"xmlservice.Document","doc":"the document to format"}]},{"name":"format","signature":"format(element)","return":"String","doc":"Outputs the given Element node as a formatted string.","url":"http://developers.google.com/apps-script/reference/xml-service/#format(Element)","argument":[{"name":"element","type":"xmlservice.Element","doc":"the element to format"}]},{"name":"setEncoding","signature":"setEncoding(encoding)","return":"xmlservice.Format","doc":"Sets the character encoding that the formatter should use.","url":"http://developers.google.com/apps-script/reference/xml-service/#setEncoding(String)","argument":[{"name":"encoding","type":"String","doc":"the encoding to use"}]},{"name":"setIndent","signature":"setIndent(indent)","return":"xmlservice.Format","doc":"Sets the string used to indent child nodes relative to their parents.","url":"http://developers.google.com/apps-script/reference/xml-service/#setIndent(String)","argument":[{"name":"indent","type":"String","doc":"the indent to use"}]},{"name":"setLineSeparator","signature":"setLineSeparator(separator)","return":"xmlservice.Format","doc":"Sets the string to insert whenever the formatter would normally insert a line break.","url":"http://developers.google.com/apps-script/reference/xml-service/#setLineSeparator(String)","argument":[{"name":"separator","type":"String","doc":"the separator to use"}]},{"name":"setOmitDeclaration","signature":"setOmitDeclaration(omitDeclaration)","return":"xmlservice.Format","doc":"Sets whether the formatter should omit the XML declaration, such as <?xml version=\"1.0\" encoding=\"UTF-8\"?>.","url":"http://developers.google.com/apps-script/reference/xml-service/#setOmitDeclaration(Boolean)","argument":[{"name":"omitDeclaration","type":"Boolean","doc":"true to omit the XML declaration; false to include it"}]},{"name":"setOmitEncoding","signature":"setOmitEncoding(omitEncoding)","return":"xmlservice.Format","doc":"Sets whether the formatter should omit the encoding in the XML declaration, such as the encoding field in <?xml version=\"1.0\" encoding=\"UTF-8\"?>.","url":"http://developers.google.com/apps-script/reference/xml-service/#setOmitEncoding(Boolean)","argument":[{"name":"omitEncoding","type":"Boolean","doc":"true to omit the encoding in the XML declaration; false to include it"}]}]},"xmlservice.Namespace":{"name":"Namespace","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/namespace","doc":"Namespace A representation of an XML namespace.","property":[],"method":[{"name":"getPrefix","signature":"getPrefix()","return":"String","doc":"Gets the prefix for the namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#getPrefix()","argument":[]},{"name":"getURI","signature":"getURI()","return":"String","doc":"Gets the URI for the namespace.","url":"http://developers.google.com/apps-script/reference/xml-service/#getURI()","argument":[]}]},"xmlservice.ProcessingInstruction":{"name":"ProcessingInstruction","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/processing-instruction","doc":"ProcessingInstruction A representation of an XML ProcessingInstruction node.","property":[],"method":[{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getData","signature":"getData()","return":"String","doc":"Gets the raw data for every instruction in the ProcessingInstruction node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getData()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getTarget","signature":"getTarget()","return":"String","doc":"Gets the target for the ProcessingInstruction node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getTarget()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]}]},"xmlservice.Text":{"name":"Text","kind":"class","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/text","doc":"Text A representation of an XML Text node.","property":[],"method":[{"name":"append","signature":"append(text)","return":"xmlservice.Text","doc":"Appends the given text to any content that already exists in the node.","url":"http://developers.google.com/apps-script/reference/xml-service/#append(String)","argument":[{"name":"text","type":"String","doc":"the text to append to the node"}]},{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getText","signature":"getText()","return":"String","doc":"Gets the text value of the Text node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getText()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]},{"name":"setText","signature":"setText(text)","return":"xmlservice.Text","doc":"Sets the text value of the Text node.","url":"http://developers.google.com/apps-script/reference/xml-service/#setText(String)","argument":[{"name":"text","type":"String","doc":"the text value to set"}]}]},"xmlservice.Content":{"name":"Content","kind":"interface","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/content","doc":"Content A representation of a generic XML node. Implementing classes NameBrief description CdataA representation of an XML CDATASection node. CommentA representation of an XML Comment node. DocTypeA representation of an XML DocumentType node. ElementA representation of an XML Element node. EntityRefA representation of an XML EntityReference node. ProcessingInstructionA representation of an XML ProcessingInstruction node. TextA representation of an XML Text node.","property":[],"method":[{"name":"asCdata","signature":"asCdata()","return":"xmlservice.Cdata","doc":"Casts the node as a CDATASection node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asCdata()","argument":[]},{"name":"asComment","signature":"asComment()","return":"xmlservice.Comment","doc":"Casts the node as a Comment node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asComment()","argument":[]},{"name":"asDocType","signature":"asDocType()","return":"xmlservice.DocType","doc":"Casts the node as a DocumentType node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asDocType()","argument":[]},{"name":"asElement","signature":"asElement()","return":"xmlservice.Element","doc":"Casts the node as an Element node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asElement()","argument":[]},{"name":"asEntityRef","signature":"asEntityRef()","return":"xmlservice.EntityRef","doc":"Casts the node as a EntityReference node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asEntityRef()","argument":[]},{"name":"asProcessingInstruction","signature":"asProcessingInstruction()","return":"xmlservice.ProcessingInstruction","doc":"Casts the node as a ProcessingInstruction node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asProcessingInstruction()","argument":[]},{"name":"asText","signature":"asText()","return":"xmlservice.Text","doc":"Casts the node as a Text node for the purposes of autocomplete.","url":"http://developers.google.com/apps-script/reference/xml-service/#asText()","argument":[]},{"name":"detach","signature":"detach()","return":"xmlservice.Content","doc":"Detaches the node from its parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#detach()","argument":[]},{"name":"getParentElement","signature":"getParentElement()","return":"xmlservice.Element","doc":"Gets the node's parent Element node.","url":"http://developers.google.com/apps-script/reference/xml-service/#getParentElement()","argument":[]},{"name":"getType","signature":"getType()","return":"xmlservice.ContentType","doc":"Gets the node's content type.","url":"http://developers.google.com/apps-script/reference/xml-service/#getType()","argument":[]},{"name":"getValue","signature":"getValue()","return":"String","doc":"Gets the text value of all nodes that are direct or indirect children of the node, in the order they appear in the document.","url":"http://developers.google.com/apps-script/reference/xml-service/#getValue()","argument":[]}]},"xmlservice.ContentType":{"name":"ContentType","kind":"enum","global":false,"category":"xml-service","url":"http://developers.google.com/apps-script/reference/xml-service/content-type","doc":"ContentType An enumeration representing the types of XML content nodes.","property":[{"name":"CDATA","type":"Enum","doc":"An XML CDATASection node."},{"name":"COMMENT","type":"Enum","doc":"An XML Comment node."},{"name":"DOCTYPE","type":"Enum","doc":"An XML DocumentType node."},{"name":"ELEMENT","type":"Enum","doc":"An XML Element node."},{"name":"ENTITYREF","type":"Enum","doc":"An XML EntityReference node."},{"name":"PROCESSINGINSTRUCTION","type":"Enum","doc":"An XML ProcessingInstruction node."},{"name":"TEXT","type":"Enum","doc":"An XML Text node."}],"method":[]}}