{"html.HtmlService":{"name":"HtmlService","kind":"class","global":true,"category":"html","url":"http://developers.google.com/apps-script/reference/html/html-service","doc":"HtmlService Service for returning HTML and other text content from a script. Due to security considerations, scripts cannot directly return content to a browser. Instead, they must sanitize the HTML so that it cannot perform malicious actions. See the description of HtmlOutput for what limitations this implies on what can be returned.","property":[{"name":"SandboxMode","type":"html.SandboxMode","doc":"An enum representing the ECMAScript sandbox modes that can be used for client-side HTML service scripts."}],"method":[{"name":"createHtmlOutput","signature":"createHtmlOutput()","return":"html.HtmlOutput","doc":"Creates a new HtmlOutput object that can be returned from the script.","url":"http://developers.google.com/apps-script/reference/html/#createHtmlOutput()","argument":[]},{"name":"createHtmlOutput","signature":"createHtmlOutput(blob)","return":"html.HtmlOutput","doc":"Creates a new HtmlOutput object from a BlobSource resource.","url":"http://developers.google.com/apps-script/reference/html/#createHtmlOutput(BlobSource)","argument":[{"name":"blob","type":"base.BlobSource","doc":"the object to get HTML out of"}]},{"name":"createHtmlOutput","signature":"createHtmlOutput(html)","return":"html.HtmlOutput","doc":"Creates a new HtmlOutput object that can be returned from the script.","url":"http://developers.google.com/apps-script/reference/html/#createHtmlOutput(String)","argument":[{"name":"html","type":"String","doc":"the content to serve"}]},{"name":"createHtmlOutputFromFile","signature":"createHtmlOutputFromFile(filename)","return":"html.HtmlOutput","doc":"Creates a new HtmlOutput object from a file in the code editor.","url":"http://developers.google.com/apps-script/reference/html/#createHtmlOutputFromFile(String)","argument":[{"name":"filename","type":"String","doc":"the name of the file to use"}]},{"name":"createTemplate","signature":"createTemplate(blob)","return":"html.HtmlTemplate","doc":"Creates a new HtmlTemplate object from a BlobSource resource.","url":"http://developers.google.com/apps-script/reference/html/#createTemplate(BlobSource)","argument":[{"name":"blob","type":"base.BlobSource","doc":"the object to get HTML out of"}]},{"name":"createTemplate","signature":"createTemplate(html)","return":"html.HtmlTemplate","doc":"Creates a new HtmlTemplate object that can be returned from the script.","url":"http://developers.google.com/apps-script/reference/html/#createTemplate(String)","argument":[{"name":"html","type":"String","doc":"the content of the template"}]},{"name":"createTemplateFromFile","signature":"createTemplateFromFile(filename)","return":"html.HtmlTemplate","doc":"Creates a new HtmlTemplate object from a file in the code editor.","url":"http://developers.google.com/apps-script/reference/html/#createTemplateFromFile(String)","argument":[{"name":"filename","type":"String","doc":"the name of the file to use"}]}]},"html.HtmlOutput":{"name":"HtmlOutput","kind":"class","global":false,"category":"html","url":"http://developers.google.com/apps-script/reference/html/html-output","doc":"HtmlOutput An HtmlOutput object that can be served from a script. Due to security considerations, scripts cannot directly return HTML to a browser. Instead, they must sanitize it so that it cannot perform malicious actions. You can return sanitized HTML like this: function doGet() { return HtmlService.createHtmlOutput('<b>Hello, world!</b>'); } The code in the HtmlOutput can include embedded JavaScript and CSS. (This is standard client-side JavaScript that manipulates the DOM, not Apps Script). All of this content is sanitized using Google Caja, which applies some limitations to your client-side code. For more information, see the guide to restrictions in HTML service.","property":[],"method":[{"name":"append","signature":"append(addedContent)","return":"html.HtmlOutput","doc":"Appends new content to the content of this HtmlOutput.","url":"http://developers.google.com/apps-script/reference/html/#append(String)","argument":[{"name":"addedContent","type":"String","doc":"the content to append"}]},{"name":"appendUntrusted","signature":"appendUntrusted(addedContent)","return":"html.HtmlOutput","doc":"Appends new content to the content of this HtmlOutput, using contextual escaping.","url":"http://developers.google.com/apps-script/reference/html/#appendUntrusted(String)","argument":[{"name":"addedContent","type":"String","doc":"the content to append"}]},{"name":"asTemplate","signature":"asTemplate()","return":"html.HtmlTemplate","doc":"Returns an HtmlTemplate backed by this HtmlOutput.","url":"http://developers.google.com/apps-script/reference/html/#asTemplate()","argument":[]},{"name":"clear","signature":"clear()","return":"html.HtmlOutput","doc":"Clears the current content.","url":"http://developers.google.com/apps-script/reference/html/#clear()","argument":[]},{"name":"getAs","signature":"getAs(contentType)","return":"base.Blob","doc":"Return the data inside this object as a blob converted to the specified content type.","url":"http://developers.google.com/apps-script/reference/html/#getAs(String)","argument":[{"name":"contentType","type":"String","doc":"the MIME type to convert to. For most blobs, 'application/pdf' is the only valid option. For images in BMP, GIF, JPEG, or PNG format, any of 'image/bmp', 'image/gif', 'image/jpeg', or 'image/png' are also valid."}]},{"name":"getBlob","signature":"getBlob()","return":"base.Blob","doc":"Return the data inside this object as a blob.","url":"http://developers.google.com/apps-script/reference/html/#getBlob()","argument":[]},{"name":"getContent","signature":"getContent()","return":"String","doc":"Gets the content of this HtmlOutput.","url":"http://developers.google.com/apps-script/reference/html/#getContent()","argument":[]},{"name":"getHeight","signature":"getHeight()","return":"Integer","doc":"Gets the initial height of the custom dialog in Google Docs, Sheets, or Forms.","url":"http://developers.google.com/apps-script/reference/html/#getHeight()","argument":[]},{"name":"getTitle","signature":"getTitle()","return":"String","doc":"Gets the title of the output page.","url":"http://developers.google.com/apps-script/reference/html/#getTitle()","argument":[]},{"name":"getWidth","signature":"getWidth()","return":"Integer","doc":"Gets the initial width of the custom dialog or sidebar in Google Docs, Sheets, or Forms.","url":"http://developers.google.com/apps-script/reference/html/#getWidth()","argument":[]},{"name":"setContent","signature":"setContent(content)","return":"html.HtmlOutput","doc":"Sets the content of this HtmlOutput.","url":"http://developers.google.com/apps-script/reference/html/#setContent(String)","argument":[{"name":"content","type":"String","doc":"the content to serve"}]},{"name":"setHeight","signature":"setHeight(height)","return":"html.HtmlOutput","doc":"Sets the initial height of the custom dialog in Google Docs, Sheets, or Forms.","url":"http://developers.google.com/apps-script/reference/html/#setHeight(Integer)","argument":[{"name":"height","type":"Integer","doc":"the new height in pixels; null results in a default value"}]},{"name":"setSandboxMode","signature":"setSandboxMode(mode)","return":"html.HtmlOutput","doc":"Sets the the ECMAScript sandbox mode used for client-side scripts.","url":"http://developers.google.com/apps-script/reference/html/#setSandboxMode(SandboxMode)","argument":[{"name":"mode","type":"html.SandboxMode","doc":"the sandbox mode to use, when possible"}]},{"name":"setTitle","signature":"setTitle(title)","return":"html.HtmlOutput","doc":"Sets the title of the output page.","url":"http://developers.google.com/apps-script/reference/html/#setTitle(String)","argument":[{"name":"title","type":"String","doc":"the new title"}]},{"name":"setWidth","signature":"setWidth(width)","return":"html.HtmlOutput","doc":"Sets the initial width of a custom dialog or sidebar in Google Docs, Sheets, or Forms.","url":"http://developers.google.com/apps-script/reference/html/#setWidth(Integer)","argument":[{"name":"width","type":"Integer","doc":"the new width in pixels; null results in a default value"}]}]},"html.HtmlTemplate":{"name":"HtmlTemplate","kind":"class","global":false,"category":"html","url":"http://developers.google.com/apps-script/reference/html/html-template","doc":"HtmlTemplate A template object for dynamically constructing HTML. For more information, see the guide to templates.","property":[],"method":[{"name":"evaluate","signature":"evaluate()","return":"html.HtmlOutput","doc":"Evaluates this template and returns an HtmlOutput object.","url":"http://developers.google.com/apps-script/reference/html/#evaluate()","argument":[]},{"name":"getCode","signature":"getCode()","return":"String","doc":"Generates a string of JavaScript code, based on the template file, that can be evaluated.","url":"http://developers.google.com/apps-script/reference/html/#getCode()","argument":[]},{"name":"getCodeWithComments","signature":"getCodeWithComments()","return":"String","doc":"Generates a string of JavaScript code that can be evaluated, with each line of the code containing the original line from the template as a comment.","url":"http://developers.google.com/apps-script/reference/html/#getCodeWithComments()","argument":[]},{"name":"getRawContent","signature":"getRawContent()","return":"String","doc":"Returns the unprocessed content of this template.","url":"http://developers.google.com/apps-script/reference/html/#getRawContent()","argument":[]}]},"html.SandboxMode":{"name":"SandboxMode","kind":"enum","global":false,"category":"html","url":"http://developers.google.com/apps-script/reference/html/sandbox-mode","doc":"SandboxMode An enum representing the ECMAScript sandbox modes that can be used for client-side HtmlService scripts. These values can be accessed from HtmlService.SandboxMode. To protect users from being served malicious HTML or JavaScript, client-side code served from HTML service executes in a security sandbox that imposes restrictions on the code. The method HtmlOutput.setSandboxMode(mode) allows script authors to choose between different versions of the sandbox. For more information, see the guide to restrictions in HTML service. If a script does not set a sandbox mode, Apps Script uses NATIVE mode as the default. Prior to February 2014, the default was EMULATED. The default is subject to change. NATIVE imposes fewer restrictions than EMULATED and generally runs faster. By contrast, EMULATED mode is more likely to work in older browsers that do not support ECMAScript 5 strict mode, most notably Internet Explorer 9. If NATIVE mode is set but not supported in the user's browser, the sandbox mode falls back to EMULATED mode for that user. // Serve HTML with a defined sandbox mode (in Apps Script server-side code). var output = HtmlService.createHtmlOutput('<b>Hello, world!</b>'); output.setSandboxMode(HtmlService.SandboxMode.EMULATED); The sandbox mode can also be read in a client-side script by inspecting google.script.sandbox.mode. Note that this property returns the actual mode on the client, which may differ from the mode requested on the server if the requested mode is not supported in the user's browser. <!-- Read the sandbox mode (in a client-side script). --> <script> alert(google.script.sandbox.mode); </script>","property":[{"name":"EMULATED","type":"Enum","doc":"A legacy sandbox mode that emulates ECMAScript 5 strict mode using only the features available in ECMAScript 3. This mode was the default prior to February 2014. This mode is more likely than NATIVE mode to work in older browsers that do not support ECMAScript 5 strict mode, most notably Internet Explorer 9. (Very old browsers, including Internet Explorer 8 and below, are usually incompatible with HTML service.) This mode imposes extra restrictions on what a script can do and generally runs more slowly than NATIVE mode."},{"name":"NATIVE","type":"Enum","doc":"A newer sandbox mode that is built on top of ECMAScript 5 strict mode. This mode has been the default since February 2014. This mode imposes fewer restrictions than EMULATED mode and generally runs faster. If this mode is set, certain older browsers — most notably Internet Explorer 9 — fall back to EMULATED mode on an individual basis. (Very old browsers, including Internet Explorer 8 and below, are usually incompatible with HTML service.)"}],"method":[]}}